{"version":3,"sources":["src/index.js","node_modules/.pnpm/parcel-bundler@1.12.5/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","iter","Array","from","isArray","_arrayLikeToArray","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_createForOfIteratorHelper","allowArrayLike","it","F","_e","normalCompletion","didErr","err","step","_e2","minLen","toString","test","len","arr2","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","undefined","_searchParams$get","allPages","allProblems","$","getJSON","json","console","log","categoryPages","theoremPages","testsList","validVersions","AIME","validYears","min","max","AIMEI","AIMEII","USAJMO","USAMO","IMO","AJHSME","AHSME","validNums","whitelist","shortName","subjectTag","tagData","concat","problemOptions","moreOptions","yearOption","yearFullOption","difficultyOption","difficultyChart","replaceButton","displaySettingsText","notes","printLinks","clickedTimes","answerTimes","subtitleClicked","settingsClicked","answerTries","streakCount","progressUpdated","searchParams","URLSearchParams","location","search","lastParam","get","testInfo","testYear","testName","JSON","parse","localStorage","getItem","text","click","document","body","removeAttribute","querySelector","window","matchMedia","matches","remove","removeItem","attr","setItem","after","Date","toDateString","addProblem","_x","_x2","_addProblem","_callee17","pagename","pushUrl","_json3","apiEndpoint","params","response","finalPage","problemText","problemProblem","problemSolutions","redirHref","redirPage","_callee17$","_context17","before","fetch","latexer","getProblem","getSolutions","includes","parseHTML","find","replace","addHistory","sourceCleanup","substring","html","titleCleanup","title","history","pushState","page","underscores","katexFallback","customText","fixLinks","directLinks","displaySettings","collapseSolutions","addClass","addAnswer","addSearch","addHistoryContainer","addBatch","toLocaleString","year","month","day","addUrlBatch","sortProblems","map","addArticle","_x3","_x4","_addArticle","_callee18","_json4","_callee18$","_context18","children","not","outerHTML","join","fillBatch","_x5","_x6","_x7","_x8","_fillBatch","_callee20","pagenames","makeBatch","_makeBatch10","clickedTimesThen","_callee20$","_context20","_makeBatch12","_callee19","problems","problemTitles","redirList","redirIndex","numProblems","invalidProblems","paramsList","responseList","jsonList","_iterator13","_step13","_step13$value","_index5","_currentProblem4","_problemText5","_problemProblem5","_problemSolutions5","_iterator14","_step14","_step14$value","index","currentProblem","_callee19$","_context19","split","all","entries","difficulty","computeDifficulty","computeTest","computeNumber","computeYear","problem","solutions","css","splice","addProblems","_makeBatch11","_objectSpread","testyear","testname","changeName","sanitize","prop","hideLinks","breakSets","addBatchAnswers","_x9","_addAnswer","_callee22","_json$parse","_$","answersTitle","answerText","problemNum","answer","_callee22$","_context22","eq","_callee21","originalAnswer","finalAnswer","_callee21$","_context21","val","toUpperCase","padStart","removeClass","getElementById","offsetWidth","prepend","parseInt","_x10","_x11","_x12","_addBatchAnswers","_callee24","uniqueTests","jsonDict","_iterator15","_step15","_jsonDict$pageTest","_$2","_step15$value","pageTest","_callee24$","_context24","Set","reduce","_defineProperty","off","toggleClass","append","_callee23","totalAnswers","rightAnswers","blankAnswers","wrongAnswers","statTests","_json$parse2","_apiEndpoint","statsText","statsList","_callee23$","_context23","change","each","nextAll","statsMatch","statName","filter","getPages","_getPages","_callee25","addPagesFromArray","addPagesFromJSON","inputSubjects","inputTests","inputYears","inputDiff","subjects","tests","yearsFrom","yearsTo","diffFrom","diffTo","pages","fullPages","_iterator18","_step18","_iterator19","_step19","_loop","_callee25$","_context26","_addPagesFromJSON","members","_iterator17","_step17","validProblem","matchesOptions","_addPagesFromArray","_iterator16","_step16","data","to","subject","_json$query$categorym","paramsContinue","_json5","_loop$","_context25","some","query","categorymembers","continue","cmcontinue","t1","problemTest","indexOf","problemYear","problemNumber","problemDiff","match","num","diff","sort","b","Math","sign","localeCompare","htmlString","htmlParsed","first","nextUntil","addBack","afterHTML","addReplace","problemList","ClipboardJS","_iterator","_step","_step$value","string","formatLatex","decodeURIComponent","capitalize","images","_iterator2","_step2","image","isDisplay","imageLatex","renderedLatex","katex","renderToString","throwOnError","displayMode","replaceAll","clearAll","activeButton","on","clearOptions","activeSecondaryButton","updateYear","collapseText","tagify","mode","originalInputValueFormat","dropdown","enabled","maxItems","renderChart","mapValueTo","templates","tag","ionRangeSlider","grid","prettify_enabled","addTags","update","optionsUncollapsed","hasClass","nameLive","breakLive","hideToggle","_callee","preTest","postTest","version","_callee$","_context","clearProblem","_callee2","invalid","randomPage","_callee2$","_context2","floor","random","_callee4","_makeBatch","fullTest","_callee4$","_context4","_makeBatch3","_callee3","_iterator3","_step3","_step3$value","_index","_currentProblem","_problemText","_problemProblem","_problemSolutions","_iterator4","_step4","_step4$value","_callee3$","_context3","addHistoryBatch","_makeBatch2","_x13","_callee6","_makeBatch4","inputProblems","_callee6$","_context6","_makeBatch6","_callee5","_iterator5","_step5","_step5$value","_index2","_currentProblem2","_problemText2","_problemProblem2","_problemSolutions2","_iterator6","_step6","_step6$value","_callee5$","_context5","_makeBatch5","_callee8","_makeBatch7","inputNumber","inputSkip","_callee8$","_context8","_makeBatch9","_callee7","pageIndex","randomList","skipProblems","_paramsList","_responseList","_jsonList","_iterator7","_step7","_step7$value","blockedProblem","_iterator8","_step8","_step8$value","_index4","_randomPage","_problemText4","_problemProblem4","_problemSolutions4","_redirHref","_redirPage","_blockedProblem","_iterator9","_step9","_step9$value","_index3","_currentProblem3","_problemText3","_problemProblem3","_problemSolutions3","_callee7$","_context7","t0","_makeBatch8","replaceProblems","_callee10","addResults","_addResults","addResult","enterResult","searchResults","pageExists","originalSearch","_json","_iterator10","_step10","_json2","_iterator11","_step11","_page","_callee10$","_context10","_addResults3","_callee9","resultsNum","loadedTimes","_callee9$","_context9","encodeURIComponent","_addResults2","_x14","_x15","_x16","_x17","url","snippet","shift","sroffset","_callee11","_iterator12","_step12","randomTheorem","_callee11$","_context11","_callee13","addItems","_addItems","addItem","_callee13$","_context13","_addItems3","_callee12","_callee12$","_context12","_addItems2","_x18","_callee14","refreshStats","_callee14$","_context14","_refreshStats","numAnswered","numCorrect","numRetry","numToday","numStreak","numSets","numArticles","numWrong","options","$schema","description","Answers","sortOrder","encoding","theta","field","stack","color","legend","scale","domain","range","order","layer","innerRadius","outerRadius","radius","fontSize","fontWeight","fill","align","baseline","dy","dx","font","toFixed","background","config","vegaEmbed","actions","renderer","_x19","_replaceProblems","_callee28","_callee28$","_context30","_callee27","_replace","replacedProblem","replacedIndex","replacedDifficulty","_callee27$","_context29","_replace3","_callee26","newProblem","giveUp","_loop2","_callee26$","_context28","_newProblem$title","_json$parse3","_$3","problemsList","oldProblemsList","origOldProblemsList","origProblemsList","pageHistory","historyIndex","answerIndex","_loop2$","_context27","replaceWith","findIndex","stringify","replaceState","_replace2","closest","href","clearOptionsWithoutHistory","buttonName","_$$attr","removeAttr","_directLinks","_callee30","_callee30$","_context32","_ref15","_callee29","event","_callee29$","_context31","preventDefault","_x21","breakNum","setDisabled","removeAllTags","yearSelect","numSelect","testVer","Test","Level","axis","titleFontSize","labelFontSize","x","tickMinStep","x2","width","height","cleanedPage","sanitizedSnippet","unshift","Map","item","_callee16","_callee16$","_context16","onpopstate","_ref11","_callee15","_event$state","_event$state2","_event$state3","_event$state4","newPagename","newProblems","newTestYear","newTestName","_callee15$","_context15","state","_x20","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","overlay","createErrorOverlay","appendChild","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","dep","Function","deps","cached","cache","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n(() => {\n  let allPages = [];\n  let allProblems = [];\n  $.getJSON(\"https://amctrivial.com/data/allpages.json\", (json) => {\n    console.log(\"getJson allpages\");\n    allPages = json;\n  });\n  $.getJSON(\"https://amctrivial.com/data/allproblems.json\", (json) => {\n    console.log(\"getJson allproblems\");\n    allProblems = json;\n  });\n\n  let categoryPages = [];\n  let theoremPages = [];\n  let testsList = `AMC 8, AMC 10, AMC 12, AIME, USAJMO, USAMO, IMO, AJHSME, AHSME`;\n  let validVersions = {\n    \"AMC 10\": [\"A\", \"B\", \"Fall A\", \"Fall B\"],\n    \"AMC 12\": [\"A\", \"B\", \"Fall A\", \"Fall B\"],\n    AIME: [\"I\", \"II\"],\n  };\n  let validYears = {\n    \"AMC 8\": { min: 1999, max: 2023 },\n    \"AMC 10\": { min: 2000, max: 2001 },\n    \"AMC 10A\": { min: 2002, max: 2022 },\n    \"AMC 10B\": { min: 2002, max: 2022 },\n    \"AMC 10Fall A\": { min: 2021, max: 2021 },\n    \"AMC 10Fall B\": { min: 2021, max: 2021 },\n    \"AMC 12\": { min: 2000, max: 2001 },\n    \"AMC 12A\": { min: 2002, max: 2022 },\n    \"AMC 12B\": { min: 2002, max: 2022 },\n    \"AMC 12Fall A\": { min: 2021, max: 2021 },\n    \"AMC 12Fall B\": { min: 2021, max: 2021 },\n    AIME: { min: 1983, max: 1999 },\n    AIMEI: { min: 2000, max: 2023 },\n    AIMEII: { min: 2000, max: 2022 },\n    USAJMO: { min: 2010, max: 2022 },\n    USAMO: { min: 1972, max: 2022 },\n    IMO: { min: 1959, max: 2022 },\n    AJHSME: { min: 1985, max: 1998 },\n    AHSME: { min: 1974, max: 1999 },\n  };\n  let validNums = {\n    \"AMC 8\": { min: 1, max: 25 },\n    \"AMC 10\": { min: 1, max: 25 },\n    \"AMC 12\": { min: 1, max: 25 },\n    AIME: { min: 1, max: 15 },\n    USAJMO: { min: 1, max: 6 },\n    USAMO: { min: 1, max: 6 },\n    IMO: { min: 1, max: 6 },\n    AJHSME: { min: 1, max: 25 },\n    AHSME: { min: 1, max: 30 },\n  };\n  let whitelist = [\n    { value: \"3D Geometry Problems\", shortName: \"3D Geo\" },\n    { value: \"Introductory Algebra Problems\", shortName: \"Intro Alg\" },\n    { value: \"Introductory Combinatorics Problems\", shortName: \"Intro Combo\" },\n    { value: \"Introductory Geometry Problems\", shortName: \"Intro Geo\" },\n    { value: \"Introductory Number Theory Problems\", shortName: \"Intro NT\" },\n    { value: \"Introductory Probability Problems\", shortName: \"Intro Prob\" },\n    { value: \"Introductory Trigonometry Problems\", shortName: \"Intro Trig\" },\n    { value: \"Intermediate Algebra Problems\", shortName: \"Int Alg\" },\n    { value: \"Intermediate Combinatorics Problems\", shortName: \"Int Combo\" },\n    { value: \"Intermediate Geometry Problems\", shortName: \"Int Geo\" },\n    { value: \"Intermediate Number Theory Problems\", shortName: \"Int NT\" },\n    { value: \"Intermediate Probability Problems\", shortName: \"Int Prob\" },\n    { value: \"Intermediate Trigonometry Problems\", shortName: \"Int Trig\" },\n    { value: \"Olympiad Algebra Problems\", shortName: \"Oly Alg\" },\n    { value: \"Olympiad Combinatorics Problems\", shortName: \"Oly Combo\" },\n    { value: \"Olympiad Geometry Problems\", shortName: \"Oly Geo\" },\n    { value: \"Olympiad Inequality Problems\", shortName: \"Oly Ineq\" },\n    { value: \"Olympiad Number Theory Problems\", shortName: \"Oly NT\" },\n    { value: \"Olympiad Trigonometry Problems\", shortName: \"Oly Trig\" },\n  ];\n  function subjectTag(tagData) {\n    console.log(\"subjectTag:\", tagData);\n    return `<tag title=\"${tagData.value}\" contenteditable=\"false\" spellcheck=\"false\" tabindex=\"-1\" class=\"tagify__tag \" value=\"${tagData.value}\">\n      <x title=\"\" class=\"tagify__tag__removeBtn\" role=\"button\" aria-label=\"remove tag\"></x>\n      <div>\n        <span class=\"tagify__tag-text\">${tagData.shortName}</span>\n      </div>\n    </tag>`;\n  }\n  let problemOptions = `<input class=\"input-multi input-flex-full\" id=\"input-subjects\"\n    placeholder=\"Choose subjects\">\n  </input>\n  <input class=\"input-multi input-flex-full\" id=\"input-tests\"\n    placeholder=\"Choose tests\"\n    data-whitelist=\"(AMC Tests),AHSME,AMC 8,AMC 10,AMC 12,AIME,USAJMO,USAMO,IMO\">\n  </input>`;\n  let moreOptions = `<div class=\"options-container text-collapsed\">\n    <h3 class=\"text-collapse-header\" id=\"options-header\">More Options</h3>\n    <div class=\"options-input\" id=\"more-options\">\n      <input class=\"input-field\"\n        id=\"input-name\" type=\"text\" placeholder=\"Custom title\"/>\n      <input class=\"input-field\"\n        id=\"input-break\" type=\"number\" min=\"1\" max=\"40\"\n        placeholder=\"Page break every n problems\"/>\n      <div class=\"input-container checkbox-container input-flex-full\"> \n        <div class=\"checkbox-wrap\" id=\"sort-container\">\n          <input type=\"checkbox\" checked class=\"input-check\" id=\"input-sort\"/>\n          <label class=\"checkbox-label\">Sort by difficulty</label>\n        </div>\n        <div class=\"checkbox-wrap\">\n          <input type=\"checkbox\" class=\"input-check\" id=\"input-hide\"/>\n          <label class=\"checkbox-label\">Hide question sources</label>\n        </div>\n      </div>\n    </div>\n  </div>`;\n  let yearOption = `<div class=\"input-container input-flex-full\">\n    <label class=\"range-label\">Years</label>\n    <input class=\"input-range\" id=\"input-years\"></input>\n  </div>`;\n  let yearFullOption = `<div class=\"input-container input-full\">\n    <label class=\"range-label\">Years</label>\n    <input class=\"input-range\" id=\"input-years\"></input>\n  </div>`;\n  let difficultyOption = `<div class=\"input-container input-flex-full\">\n    <label class=\"range-label\">\n      Difficulty range<sup><a\n        class=\"dark-link\" id=\"difficulty-link\"\n        href=\"#\"\n        >(?)</a\n      ></sup>\n    </label>\n    <input class=\"input-range\" id=\"input-diff\"></input>\n  </div>`;\n  let difficultyChart = `\n      <div class=\"difficulty-info-hidden\" id=\"difficulty-info\">\n        Difficulty levels are based on <a\n          href=\"https://artofproblemsolving.com/wiki/index.php/AoPS_Wiki:Competition_ratings\"\n        >AoPS Wiki ratings</a>. They’re just determined by test and problem\n        number, and may be inaccurate for old exams.\n        <div id=\"difficulty-chart\"></div>\n      </div>`;\n  let replaceButton = `<button class=\"text-button replace-problem\">\n    (Replace problem)\n  </button>`;\n  let displaySettingsText = `<div class=\"display-settings\">\n    <span class=\"settings-text\">Settings</span\n    ><button\n      class=\"text-button setting-button\"\n      id=\"serif-toggle\"\n      tabindex=\"0\"\n    >\n      Sans font\n    </button> ⋅\n    <button\n      class=\"text-button setting-button\"\n      id=\"justify-toggle\"\n      tabindex=\"0\"\n    >\n      Unjustified text\n    </button> ⋅\n    <button\n      class=\"text-button setting-button\"\n      id=\"counter-toggle\"\n      tabindex=\"0\"\n    >\n      Counters on\n    </button> ⋅\n    <button\n      class=\"text-button setting-button\"\n      id=\"autogen-toggle\"\n      tabindex=\"0\"\n    >\n      Auto-generate on\n    </button> ⋅\n    <button\n      class=\"text-button setting-button\"\n      id=\"print-toggle\"\n      tabindex=\"0\"\n    >\n      Links unprinted\n    </button>\n  </div>`;\n  let notes = `<div class=\"notes\">\n    <h3 class=\"text-collapse-header\" id=\"notes-header\">Tips</h3>\n    <ul id=\"notes-text\">\n      <li>\n        If nothing is chosen for the tests option, problems from all tests, even\n        non-AMC ones, will be included. Choosing AMC Tests includes all the\n        tests in the dropdown, counting the IMO as well.\n      </li>\n      <li>\n        The different subjects are based on AoPS Wiki categories. They don’t\n        cover all the problems, so categorizing more pages on the wiki is greatly\n        appreciated.\n      </li>\n        <ul>\n          <li>To add a category, edit any problem page and add\n          <code>[[Category:SUBJECT]]</code> to the bottom (replace\n          <code>SUBJECT</code> with the actual subject, like Introductory\n          Geometry Problems).\n          </li>\n        </ul><!--\n      <li>\n        Historical notes:\n        <ul>\n          <li>AJHSME tests are counted as AMC 8 tests before 1999.</li>\n          <li>\n            The AHSME was introduced in its 30-question form in 1974. The AIME\n            was introduced in 1983, and the AJHSME in 1985. USAJMO problems are\n            available since 2010. All other major exams predate 1974. \n          </li>\n          <li>\n            The 30-question AHSME was replaced by the AMC 10 and AMC 12 while\n            the AIME was split into the AIME I and AIME II in 2000. The AMC 10\n            and AMC 12 were similarly split into\n            <a href=\"https://en.wikipedia.org/wiki/Taiwan\" class=\"secret-link\"\n              >tw</a\n            >o A and B tests in 2002.\n          </li>\n        </ul>\n      </li>-->\n      <li>\n        Check out more math materials in collections like <a\n        href=\"https://artofproblemsolving.com/community/c2008407h2550333_handouts_list\"\n        >this one</a> on AoPS, and join the\n        <a href=\"https://discord.gg/VExpSZfkAE\">Discord server</a> to\n        ask for help, discuss problems, and more!\n      </li>\n    <ul>\n  </div>`;\n  let printLinks = false;\n  let clickedTimes = 0;\n  let answerTimes = 0;\n  let subtitleClicked = 0;\n  let settingsClicked = \"\";\n  let answerTries = 0;\n  let streakCount = 0;\n  let progressUpdated = false;\n\n  let searchParams = new URLSearchParams(location.search);\n  let lastParam = searchParams.get(\"page\") ?? searchParams.get(\"problems\");\n  let testInfo = {\n    testYear: searchParams.get(\"testyear\"),\n    testName: searchParams.get(\"testname\"),\n  };\n\n  // Toggles settings\n  (() => {\n    if (JSON.parse(localStorage.getItem(\"darkTheme\"))) {\n      $(\"#dark-toggle\").text(\"Dark theme\");\n    }\n    if (JSON.parse(localStorage.getItem(\"darkTheme\")) == false) {\n      $(\"#dark-toggle\").text(\"Light theme\");\n    }\n\n    $(\"#dark-toggle\").click(() => {\n      document.body.removeAttribute(\"style\");\n      document.querySelector(\".page-container\").removeAttribute(\"style\");\n      if (JSON.parse(localStorage.getItem(\"darkTheme\"))) {\n        if (!window.matchMedia(\"(prefers-color-scheme: dark)\").matches) $(\"#dark-stylesheet-link\").remove();\n\n        localStorage.removeItem(\"darkTheme\");\n        $(\"meta[name='color-scheme']\").attr(\"content\", \"light dark\");\n        $(\"#dark-toggle\").text(\"System theme\");\n      } else if (JSON.parse(localStorage.getItem(\"darkTheme\")) === null) {\n        $(\"#dark-stylesheet-link\").remove();\n\n        localStorage.setItem(\"darkTheme\", false);\n        $(\"meta[name='color-scheme']\").attr(\"content\", \"light\");\n        $(\"#dark-toggle\").text(\"Light theme\");\n      } else {\n        $(\"#stylesheet-link\").after(`<link id=\"dark-stylesheet-link\" href=\"/src/dark.css\" rel=\"stylesheet\" />`);\n\n        localStorage.setItem(\"darkTheme\", true);\n        $(\"meta[name='color-scheme']\").attr(\"content\", \"dark\");\n        $(\"#dark-toggle\").text(\"Dark theme\");\n      }\n    });\n  })();\n\n  // Resets date\n  (() => {\n    if (localStorage.getItem(\"dateToday\") !== new Date().toDateString()) {\n      localStorage.setItem(\"dateToday\", new Date().toDateString());\n      localStorage.setItem(\"numToday\", 0);\n    }\n  })();\n\n  // Adds things\n  async function addProblem(pagename, pushUrl) {\n    console.log(\"addProblem:\", pagename, pushUrl);\n    $(\".notes\").before(\n      `<div class=\"problem-section\" id=\"problem-section\">\n      <h2 class=\"section-header\" id=\"article-header\"></h2>\n      <div class=\"section-options\">\n        <a href=\"\" class=\"aops-link\">\n          View on the AoPS Wiki\n        </a> ⋅ <button class=\"text-button section-button\" tabindex=\"0\"\n        onclick=\"window.print()\">\n          Print this page\n        </button>\n      </div>\n      <div class=\"article-text\" id=\"problem-text\"></div>\n    </div>\n    <div class=\"problem-section section-collapsed\" id=\"solutions-section\">\n      <h2 class=\"section-header collapse-header\" id=\"solutions-header\">Solutions</h2>\n      <div class=\"article-text\" id=\"solutions-text\"></div>\n    </div>\n    ${displaySettingsText}`\n    );\n\n    if (JSON.parse(localStorage.getItem(\"countersHidden\"))) {\n      $(\"#counter-toggle\").text(\"Counters off\");\n    }\n\n    localStorage.setItem(\"numProblems\", JSON.parse(localStorage.getItem(\"numProblems\")) + 1);\n\n    let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n    let params = `action=parse&page=${pagename}&format=json`;\n\n    let response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n    let json = await response.json();\n    let finalPage = pagename;\n\n    if (json?.parse) {\n      let problemText = latexer(json.parse.text[\"*\"]);\n      let problemProblem = getProblem(problemText);\n      let problemSolutions = getSolutions(problemText);\n\n      if (problemProblem && problemSolutions) {\n      } else if (problemText.includes(\"Redirect to:\")) {\n        console.log(\"Redirect problem, going there instead...\");\n\n        let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n        let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n        console.log(redirPage);\n\n        params = `action=parse&page=${redirPage}&format=json`;\n        response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n        json = await response.json();\n        problemText = latexer(json.parse.text[\"*\"]);\n        problemProblem = getProblem(problemText);\n        problemSolutions = getSolutions(problemText);\n        finalPage = redirPage;\n      }\n\n      addHistory(pagename, sourceCleanup(problemProblem).substring(0, 140));\n\n      $(\"#problem-text\").html(problemProblem);\n      $(\"#solutions-text\").html(problemSolutions);\n      $(\"#article-header\").html(titleCleanup(pagename));\n\n      document.title = titleCleanup(pagename) + \" - Trivial Math Practice\";\n      if (pushUrl) {\n        history.pushState(\n          { page: pagename },\n          titleCleanup(pagename) + \" - Trivial Math Practice\",\n          \"?page=\" + underscores(pagename)\n        );\n        searchParams = new URLSearchParams(location.search);\n        lastParam = searchParams.get(\"page\");\n      }\n\n      $(\".aops-link\").attr(\"href\", `https://artofproblemsolving.com/wiki/index.php/${underscores(finalPage)}`);\n      katexFallback();\n      customText();\n      fixLinks();\n      directLinks();\n      displaySettings();\n      collapseSolutions();\n\n      $(\"#random-input\").addClass(\"random-input-active\");\n      if (!$(\".practice-progress\").length) {\n        $(\"#problem-section\").before(\n          `<div class=\"practice-progress progress-nobottom progress-hidden\">\n          <div class=\"streak-bar bar-hidden\">` +\n            `<span id=\"streak-num\">0</span> streak</div>\n          <div class=\"question-bar right-questions bar-hidden\" style=\"flex-grow: 0\">` +\n            `<span id=\"right-num\">0</span> correct</div>\n          <div class=\"question-bar retry-questions bar-hidden\" style=\"flex-grow: 0\">` +\n            `<span id=\"retry-num\">0</span> retry</div>\n          <div class=\"spacer-bar\" style=\"flex-grow: 0\"></div>\n          <div class=\"question-bar blank-questions bar-hidden\" style=\"flex-grow: 0\">` +\n            `<span id=\"blank-num\">0</span> blank</div>\n          <div class=\"question-bar wrong-questions bar-hidden\" style=\"flex-grow: 0\">` +\n            `<span id=\"wrong-num\">0</span> incorrect</div>\n        </div>`\n        );\n        if ($(\"#random-input\").length) $(\"#random-input\").after($(\".practice-progress\"));\n      }\n\n      $(\".answer-check\").remove();\n      await addAnswer(pagename.replace(/_/g, \" \"));\n      return problemProblem && problemSolutions;\n    } else {\n      $(\".article-text\").before(`<p class=\"error\">The page you specified does not exist.</p>`);\n      $(\".article-text\").remove();\n      $(\"#article-header\").html(\"Error\");\n      $(\".section-options\").remove();\n      $(\"#solutions-section\").remove();\n    }\n  }\n\n  function addSearch() {\n    console.log(\"addSearch\");\n    $(\".notes\").before(\n      `<div class=\"results-container\">\n      <span class=\"results-notice\"></span>\n    </div>`\n    );\n  }\n\n  function addHistoryContainer() {\n    console.log(\"addHistoryContainer\");\n    $(\".notes\").before(\n      `<div class=\"results-container\">\n      <button class=\"text-button\" id=\"clear-history\">(Clear history)</button>\n    </div>`\n    );\n  }\n\n  function addBatch() {\n    console.log(\"addBatch\");\n    $(\".notes\").before(\n      `<div class=\"problem-section\">\n      <h2 class=\"section-header\" id=\"batch-header\">Problem Set - ${new Date().toLocaleString(\"en-UK\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      })}</h2>\n      <div class=\"article-text\" id=\"batch-text\"></div>\n    </div>\n    <div class=\"problem-section section-collapsed\" id=\"solutions-section\">\n      <h2 class=\"section-header collapse-header\" id=\"solutions-header\">Solutions</h2>\n      <div class=\"article-text batch-solutions-text\" id=\"solutions-text\"></div>\n    </div>\n    ${displaySettingsText}`\n    );\n\n    if (JSON.parse(localStorage.getItem(\"countersHidden\"))) {\n      $(\"#counter-toggle\").text(\"Counters off\");\n    }\n\n    localStorage.setItem(\"numSets\", JSON.parse(localStorage.getItem(\"numSets\")) + 1);\n  }\n\n  function addUrlBatch() {\n    console.log(\"addUrlBatch\");\n    $(\".notes\").before(\n      `<div class=\"options-input\" id=\"problems-input\">\n        <input class=\"input-field\" id=\"input-problems\"\n        type=\"text\" placeholder=\"Problems (paste problem lists here!)\"\n        data-whitelist=\"${sortProblems(allProblems)\n          .map((e) => titleCleanup(e))\n          .toString()}\">\n        <button class=\"input-button\" id=\"problems-button\">\n          Go!\n        </button>\n      </div>${moreOptions}\n      <div class=\"problem-section\">\n        <h2 class=\"section-header\" id=\"batch-header\">Problem Set - ${new Date().toLocaleString(\"en-UK\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        })}</h2>\n        <div class=\"article-text\" id=\"batch-text\"></div>\n      </div>\n      <div class=\"problem-section section-collapsed\" id=\"solutions-section\">\n        <h2 class=\"section-header collapse-header\" id=\"solutions-header\">Solutions</h2>\n        <div class=\"article-text batch-solutions-text\" id=\"solutions-text\"></div>\n      </div>\n      ${displaySettingsText}`\n    );\n\n    if (JSON.parse(localStorage.getItem(\"countersHidden\"))) {\n      $(\"#counter-toggle\").text(\"Counters off\");\n    }\n\n    localStorage.setItem(\"numSets\", JSON.parse(localStorage.getItem(\"numSets\")) + 1);\n  }\n\n  async function addArticle(pagename, pushUrl) {\n    console.log(\"addArticle:\", pagename, pushUrl);\n\n    $(\".error\").remove();\n    $(\".problem-section\").remove();\n    $(\".display-settings\").remove();\n    $(\".results-container\").remove();\n    $(\"#load-results\").remove();\n    $(\".notes\").before(`<div class=\"problem-section\">\n      <h2 class=\"section-header\" id=\"article-header\"></h2>\n      <div class=\"section-options\">\n        <a href=\"\" class=\"aops-link\">\n          View on the AoPS Wiki\n        </a> ⋅ <button class=\"text-button section-button\" tabindex=\"0\"\n        onclick=\"window.print()\">\n          Print this page\n        </button>\n      </div>\n      <div class=\"article-text\" id=\"full-text\"></div>\n    </div>\n    ${displaySettingsText}`);\n\n    if (JSON.parse(localStorage.getItem(\"countersHidden\"))) {\n      $(\"#counter-toggle\").text(\"Counters off\");\n    }\n\n    localStorage.setItem(\"numArticles\", JSON.parse(localStorage.getItem(\"numArticles\")) + 1);\n\n    let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n    let params = `action=parse&page=${pagename}&format=json`;\n\n    let response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n    let json = await response.json();\n\n    if (json?.parse) {\n      let problemText = latexer(json.parse.text[\"*\"]);\n\n      if (problemText.includes(\"Redirect to:\")) {\n        console.log(\"Redirect page, going there instead...\");\n\n        let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n        let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n        console.log(redirPage);\n        pagename = redirPage;\n\n        params = `action=parse&page=${redirPage}&format=json`;\n        response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n        json = await response.json();\n        problemText = latexer(json.parse.text[\"*\"]);\n      }\n\n      problemText = $($.parseHTML(problemText))\n        .children()\n        .not(\".toc\")\n        .not(\"table:contains('Printable version')\")\n        .not(\"pre:contains('<geogebra>')\")\n        .map(function () {\n          return this.outerHTML;\n        })\n        .get()\n        .join(\"\");\n\n      addHistory(pagename, sourceCleanup(problemText).substring(0, 140));\n\n      $(\".article-text\").html(problemText);\n      $(\"#article-header\").html(titleCleanup(pagename));\n\n      document.title = titleCleanup(pagename) + \" - Trivial Math Practice\";\n      if (pushUrl) {\n        history.pushState(\n          { page: pagename },\n          titleCleanup(pagename) + \" - Trivial Math Practice\",\n          \"?page=\" + underscores(pagename)\n        );\n        searchParams = new URLSearchParams(location.search);\n        lastParam = searchParams.get(\"page\");\n      }\n\n      $(\".aops-link\").attr(\"href\", `https://artofproblemsolving.com/wiki/index.php/${underscores(pagename)}`);\n      katexFallback();\n    } else {\n      $(\".article-text\").before(`<p class=\"error\">The page you specified does not exist.</p>`);\n      $(\".article-text\").remove();\n      $(\"#article-header\").html(\"Error\");\n      $(\".section-options\").remove();\n    }\n    customText();\n    fixLinks();\n    directLinks();\n    displaySettings();\n  }\n\n  async function fillBatch(pagenames, pushUrl, testYear, testName) {\n    console.log(\"fillBatch:\", pagenames, pushUrl, testYear, testName);\n\n    async function makeBatch() {\n      let problems = [];\n      let problemTitles = pagenames.split(\"|\").map((e) => e.replace(/_/g, \" \").replace(\"#\", \"Problems/Problem \"));\n      let redirList = [];\n      let redirIndex = [];\n      let numProblems = problemTitles.length;\n      let invalidProblems = 0;\n\n      let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n\n      $(\"#batch-header\").after(\n        `<div class=\"loading-notice\">\n          <div class=\"loading-text\">Loading problems…</div>\n          <div class=\"loading-bar-container\">\n            <div class=\"loading-bar\"></div>\n          </div>\n        </div>`\n      );\n\n      let paramsList = problemTitles.map((currentProblem) => `action=parse&page=${currentProblem}&format=json`);\n      console.log(paramsList);\n      let responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n      console.log(responseList);\n      let jsonList = await Promise.all(responseList.map((response) => response.json()));\n      console.log(jsonList);\n\n      for (let [index, currentProblem] of problemTitles.entries()) {\n        let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n        let problemProblem = getProblem(problemText);\n        let problemSolutions = getSolutions(problemText);\n\n        if (problemProblem && problemSolutions) {\n          problems.push({\n            title: currentProblem,\n            difficulty: computeDifficulty(\n              computeTest(currentProblem),\n              computeNumber(currentProblem),\n              computeYear(currentProblem)\n            ),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n\n          $(\".loading-bar\").css(\"width\", `${((problems.length + invalidProblems) / numProblems) * 100}%`);\n        } else if (problemText.includes(\"Redirect to:\")) {\n          console.log(\"Redirect problem, going there instead...\");\n\n          let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n          let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n          console.log(redirPage);\n          redirList.push(redirPage);\n          redirIndex.push(index);\n\n          $(\".loading-bar\").css(\"width\", `${((problems.length + invalidProblems) / numProblems) * 100}%`);\n        } else {\n          console.log(\"Invalid problem, skipping...\");\n          invalidProblems++;\n        }\n      }\n\n      if (redirList[0]) {\n        paramsList = redirList.map((redirPage) => `action=parse&page=${redirPage}&format=json`);\n        console.log(paramsList);\n        responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n        console.log(responseList);\n        jsonList = await Promise.all(responseList.map((response) => response.json()));\n        console.log(jsonList);\n\n        for (let [index, currentProblem] of redirList.entries()) {\n          let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n          let problemProblem = getProblem(problemText);\n          let problemSolutions = getSolutions(problemText);\n\n          problems.splice(redirIndex[index], 0, {\n            title: currentProblem,\n            difficulty: computeDifficulty(\n              computeTest(currentProblem),\n              computeNumber(currentProblem),\n              computeYear(currentProblem)\n            ),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n        }\n      }\n\n      if (clickedTimes === clickedTimesThen) {\n        console.log(problems);\n        addProblems(problems, false);\n      }\n    }\n\n    clickedTimes++;\n    let clickedTimesThen = clickedTimes;\n    await makeBatch();\n\n    if (clickedTimes === clickedTimesThen) {\n      if (pushUrl) {\n        console.log({\n          problems: pagenames,\n          ...(testName ? { testyear: testYear, testname: testName } : {}),\n        });\n        history.pushState(\n          {\n            problems: pagenames,\n            ...(testName ? { testyear: testYear, testname: testName } : {}),\n          },\n          \"Problem Set - Trivial Math Practice\",\n          \"?problems=\" + pagenames + (testYear ? `&testyear=${testYear}&testname=${testName}` : ``)\n        );\n        searchParams = new URLSearchParams(location.search);\n        lastParam = searchParams.get(\"problems\");\n      }\n\n      $(\".loading-notice\").remove();\n      katexFallback();\n      customText();\n      changeName();\n      if (testName) {\n        let name = sanitize(`${testYear} ${testName}`);\n        $(\"#batch-header\").html(name);\n        document.title = name + \" - Trivial Math Practice\";\n        $(\"#input-hide\").prop(\"checked\", true);\n      }\n      fixLinks();\n      collapseSolutions();\n      directLinks();\n      displaySettings();\n      hideLinks();\n      breakSets();\n      addBatchAnswers(\n        pagenames.split(\"|\").map((e) => e.replace(/_/g, \" \").replace(\"#\", \"Problems/Problem \")),\n        testName,\n        testYear\n      );\n    }\n  }\n\n  async function addAnswer(pagename) {\n    console.log(\"addAnswer:\", pagename);\n\n    clickedTimes++;\n    answerTimes++;\n    let clickedTimesThen = clickedTimes;\n    answerTries = 0;\n    progressUpdated = false;\n    let answersTitle = `${pagename?.split(\" Problems/Problem\")[0]} Answer Key`;\n    let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n    let params = `action=parse&page=${answersTitle}&format=json`;\n\n    let response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n    let json = await response.json();\n    let answerText = json.parse?.text[\"*\"];\n    let problemNum = computeNumber(pagename);\n    let answer = $($.parseHTML(answerText))\n      ?.find(\"ol li\")\n      ?.eq(problemNum - 1)\n      ?.text();\n    if (answer) {\n      if (clickedTimes === clickedTimesThen) {\n        $(\"#problem-text\").after(`<div class=\"answer-check\">\n        <form class=\"options-input answer-options\" onsubmit=\"return false\">\n          <input class=\"input-field\" id=\"input-answer\"\n            type=\"text\" placeholder=\"Enter answer (optional)\"/>\n          <button type=\"submit\" class=\"input-button\" id=\"answer-button\">\n            Check Answer\n          </button>\n        </form>\n        <div class=\"answer-feedback\"></div>\n      </div>`);\n\n        $(\"#answer-button\").click(async function () {\n          let originalAnswer = sanitize($(\"#input-answer\").val());\n          originalAnswer = originalAnswer.toUpperCase();\n          let finalAnswer = originalAnswer;\n          if (finalAnswer) {\n            if (computeTest(pagename) === \"AIME\") finalAnswer = originalAnswer.padStart(3, \"0\");\n            answerTries++;\n\n            if (answerTries == 1) {\n              localStorage.setItem(\"numToday\", JSON.parse(localStorage.getItem(\"numToday\")) + 1);\n              localStorage.setItem(\"numAnswered\", JSON.parse(localStorage.getItem(\"numAnswered\")) + 1);\n            }\n            if (\n              finalAnswer === answer ||\n              (pagename === \"2012 AMC 12B Problems/Problem 12\" && (finalAnswer === \"D\" || finalAnswer === \"E\")) ||\n              (pagename === \"2015 AMC 10A Problems/Problem 20\" && finalAnswer === \"B\") ||\n              (pagename === \"2022 AIME II Problems/Problem 8\" && (finalAnswer === \"080\" || finalAnswer === \"081\"))\n            ) {\n              $(\"#input-answer\").removeClass(\"glow\");\n              void document.getElementById(\"input-answer\").offsetWidth;\n              $(\"#input-answer\").addClass(\"glow\");\n\n              $(\".answer-feedback\").prepend(`<div class=\"feedback-item correct-feedback\">\n                  ${originalAnswer} is correct! :)\n                </div>`);\n              if (!progressUpdated) {\n                $(\".progress-hidden\").removeClass(\"progress-hidden\");\n                progressUpdated = true;\n                if (answerTries == 1) {\n                  streakCount++;\n                  if (streakCount > JSON.parse(localStorage.getItem(\"numStreak\")))\n                    localStorage.setItem(\"numStreak\", streakCount);\n\n                  $(\".streak-bar\").removeClass(\"bar-hidden\");\n                  $(\".question-bar.right-questions\").removeClass(\"bar-hidden\");\n                  $(\".question-bar.right-questions\").css(\n                    \"flex-grow\",\n                    parseInt($(\".question-bar.right-questions\").css(\"flex-grow\")) + 1\n                  );\n                  $(\"#right-num\").text(parseInt($(\".question-bar.right-questions\").css(\"flex-grow\")));\n                  localStorage.setItem(\"numCorrect\", JSON.parse(localStorage.getItem(\"numCorrect\")) + 1);\n                } else {\n                  $(\".streak-bar\").removeClass(\"bar-hidden\");\n                  $(\".question-bar.retry-questions\").removeClass(\"bar-hidden\");\n                  $(\".question-bar.retry-questions\").css(\n                    \"flex-grow\",\n                    parseInt($(\".question-bar.retry-questions\").css(\"flex-grow\")) + 1\n                  );\n                  $(\"#retry-num\").text(parseInt($(\".question-bar.retry-questions\").css(\"flex-grow\")));\n                  localStorage.setItem(\"numRetry\", JSON.parse(localStorage.getItem(\"numRetry\")) + 1);\n                }\n                $(\"#solutions-header\").click();\n              }\n            } else {\n              streakCount = 0;\n\n              $(\"#input-answer\").removeClass(\"shake\");\n              void document.getElementById(\"input-answer\").offsetWidth;\n              $(\"#input-answer\").addClass(\"shake\");\n\n              $(\".answer-feedback\").prepend(`<div class=\"feedback-item wrong-feedback\">\n              ${originalAnswer} is wrong :(\n              </div>`);\n            }\n          }\n          $(\"#input-answer\").val(\"\");\n          $(\"#streak-num\").text(streakCount);\n        });\n      }\n    }\n  }\n\n  async function addBatchAnswers(pagenames, testName, testYear) {\n    console.log(\"addBatchAnswers:\", pagenames, testName, testYear);\n\n    clickedTimes++;\n    let clickedTimesThen = clickedTimes;\n\n    let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n\n    let testsList = pagenames.map((pagename) => pagename?.split(\" Problems/Problem\")[0]);\n    let uniqueTests = [...new Set(testsList)];\n    console.log(uniqueTests);\n    let paramsList = uniqueTests.map((test) => `action=parse&page=${test} Answer Key&format=json`);\n\n    let responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n    console.log(responseList);\n\n    let jsonList = await Promise.all(responseList.map((response) => response.json()));\n    console.log(jsonList);\n    let jsonDict = jsonList.reduce((jsonDict, json, index) => {\n      return { ...jsonDict, [uniqueTests[index]]: json };\n    }, {});\n    console.log(jsonDict);\n\n    for (let [index, pagename] of pagenames.entries()) {\n      let pageTest = pagename?.split(\" Problems/Problem\")[0];\n      let answerText = jsonDict[pageTest]?.parse?.text[\"*\"];\n\n      let problemNum = computeNumber(pagename);\n      let answer = $($.parseHTML(answerText))\n        ?.find(\"ol li\")\n        ?.eq(problemNum - 1)\n        ?.text();\n\n      if (clickedTimes === clickedTimesThen) {\n        if (answer) {\n          if (!$(\"#batchans-section\").length)\n            $(\"#solutions-section\").before(\n              `<div class=\"problem-section\" id=\"batchans-section\">\n              <h2 class=\"section-header collapse-header\" id=\"batchans-header\">\n              Answer Check\n                <span class=\"header-minor\">(opt.)</span></h2>\n              <div class=\"answer-list\"></div>\n              <div class=\"options-input batchans-options\">\n                <div class=\"input-container checkbox-container\n                input-flexone-full\">\n                  <div class=\"checkbox-wrap\">\n                    <div class=\"radio-block\">\n                      <input type=\"radio\" name=\"input-feedback\" id=\"score-only\"\n                      value=\"score-only\">\n                      <label class=\"checkbox-label\">Only show score</label>\n                    </div>\n                    <div class=\"radio-block\">\n                      <input type=\"radio\" name=\"input-feedback\" id=\"check-only\"\n                      value=\"check-only\">\n                      <label class=\"checkbox-label\">Only mark questions</label>\n                    </div>\n                    <div class=\"radio-block\">\n                      <input type=\"radio\" name=\"input-feedback\" id=\"show-ans\"\n                      value=\"show-ans\" checked>\n                      <label class=\"checkbox-label\">Show correct answers</label>\n                    </div>\n                    <div class=\"radio-block\">\n                      <input type=\"checkbox\" class=\"input-check\" id=\"input-amc\"/>\n                      <label class=\"checkbox-label\">Use AMC 10/12 scoring</label>\n                    </div>\n                  </div>\n                </div>\n                <button class=\"input-button input-button-flexone-full\"\n                id=\"batchans-button\">\n                  Check Answers\n                </button>\n              </div>\n            </div>`\n            );\n\n          $(\"#batchans-header\").off(\"click\");\n          $(\"#batchans-header\").click(() => {\n            $(\"#batchans-section\").toggleClass(\"section-collapsed\");\n          });\n\n          $(\".answer-list\").append(`<div class=\"answer-box\" index=\"${index + 1}\"\n            pagename=\"${pagename}\" answer=\"${answer}\">\n            <span class=\"answer-num\">${index + 1}</span>\n            <input class=\"input-field input-batchans\" type=\"text\"\n            placeholder=\"Enter answer\"/>\n          </div>`);\n        }\n      }\n    }\n\n    $(\"#batchans-button\").click(async () => {\n      $(\".feedback-item\").remove();\n\n      if ($(\"#score-only\").prop(\"checked\")) $(\"#batchans-section\").addClass(\"batchans-scoreonly\");\n      else if ($(\"#check-only\").prop(\"checked\")) $(\"#batchans-section\").addClass(\"batchans-checkonly\");\n      else $(\"#batchans-section\").addClass(\"batchans-showans\");\n\n      if ($(\"#input-amc\").prop(\"checked\")) $(\"#batchans-section\").addClass(\"batchans-amcscore\");\n\n      $(\"input[type=radio][name=input-feedback]\").change(function () {\n        $(\"#batchans-section\").removeClass(\"batchans-scoreonly batchans-checkonly batchans-showans\");\n        console.log(this.value);\n        switch (this.value) {\n          case \"score-only\":\n            $(\"#batchans-section\").addClass(\"batchans-scoreonly\");\n          case \"check-only\":\n            $(\"#batchans-section\").addClass(\"batchans-checkonly\");\n          case \"show-ans\":\n            $(\"#batchans-section\").addClass(\"batchans-showans\");\n        }\n      });\n\n      $(\"#input-amc\").off(\"change\");\n      $(\"#input-amc\").change(() => {\n        $(\"#batchans-section\").toggleClass(\"batchans-amcscore\");\n      });\n\n      let totalAnswers = $(\".answer-box\").length;\n      let rightAnswers = 0;\n      let blankAnswers = 0;\n      let wrongAnswers = 0;\n\n      $(\".answer-box\").each(function () {\n        let originalAnswer = sanitize($(this).find(\".input-batchans\").val());\n        originalAnswer = originalAnswer.toUpperCase();\n        let finalAnswer = originalAnswer;\n        if (finalAnswer) {\n          let pagename = $(this).attr(\"pagename\");\n          if (computeTest(pagename) === \"AIME\") finalAnswer = originalAnswer.padStart(3, \"0\");\n          if (\n            finalAnswer === $(this).attr(\"answer\") ||\n            (pagename === \"2012 AMC 12B Problems/Problem 12\" && (finalAnswer === \"D\" || finalAnswer === \"E\")) ||\n            (pagename === \"2015 AMC 10A Problems/Problem 20\" && finalAnswer === \"B\") ||\n            (pagename === \"2022 AIME II Problems/Problem 8\" && (finalAnswer === \"080\" || finalAnswer === \"081\"))\n          ) {\n            $(this).append(`<span class=\"feedback-item correct-feedback\"><span class=\"feedback-icon\">✓</span></span>`);\n            rightAnswers++;\n          } else {\n            $(this).append(\n              `<span class=\"feedback-item wrong-feedback\">\n                <span class=\"feedback-icon\">✗</span>\n                <span class=\"feedback-answer\">(${$(this).attr(\"answer\")})</span>\n              </span>`\n            );\n            wrongAnswers++;\n          }\n        } else {\n          $(this).append(\n            `<span class=\"feedback-item blank-feedback\">\n              <span class=\"feedback-icon\">&#8202;&#8210;&#8202;</span>\n              <span class=\"feedback-answer\">(${$(this).attr(\"answer\")})</span>\n            </span>`\n          );\n          blankAnswers++;\n        }\n      });\n\n      if (!$(\".score-box\").length)\n        $(\".batchans-options\").after(\n          `<div class=\"score-box\">\n              <p class=\"score-line\" id=\"number-score\"></p>\n              <p class=\"score-line\" id=\"amc-score\"></p>\n              <p class=\"score-line amc-stats\" id=\"amc-stats\"></p>\n            </div>`\n        );\n      $(\"#number-score\").text(`Correct: ${rightAnswers}/${totalAnswers}`);\n      $(\"#amc-score\").html(`<span class=\"score-num\">Score: ${rightAnswers * 6 + blankAnswers * 1.5}</span>`);\n\n      let statTests = [\"AMC 8\", \"AMC 10A\", \"AMC 10B\", \"AMC 12A\", \"AMC 12B\", \"AIME I\", \"AIME II\"];\n      if (testName && statTests.includes(testName)) {\n        let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n        let params = `action=parse&page=AMC_historical_results&format=json`;\n\n        let response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n        let json = await response.json();\n        let statsText = json.parse?.text[\"*\"];\n        let statsList = [];\n\n        $($.parseHTML(statsText))\n          .find(`h2:contains(\"${testYear}\")`)\n          .nextAll(`h3:contains(\"${testName}\")`)\n          .nextAll(\"ul\")\n          .eq(0)\n          .children()\n          .each(function () {\n            let statsMatch = /floor|cutoff|roll|DHR|Distinction|Median|Average/i;\n            statName = $(this).text().replace(\"Distinguished Honor Roll\", \"DHR\").replace(\"Honor roll\", \"Honor Roll\");\n            if (statsMatch.test(statName)) {\n              statsList.push(statName);\n            }\n          });\n        statsList = statsList.filter((e) => /\\d/.test(e));\n        $(\"#amc-stats\").html(`${statsList.join(\", \")} <a href=\"?page=AMC_historical_results\">(link)</a>`);\n      }\n    });\n  }\n\n  // Gets and checks pages\n  async function getPages() {\n    function addPagesFromArray(members) {\n      for (let problem of members) {\n        if (matchesOptions(problem, tests, yearsFrom, yearsTo, diffFrom, diffTo)) pages.push(problem);\n      }\n    }\n\n    function addPagesFromJSON(members) {\n      for (let problem of members) {\n        if (validProblem(problem.title)) {\n          if (matchesOptions(problem.title, tests, yearsFrom, yearsTo, diffFrom, diffTo)) pages.push(problem.title);\n          fullPages.push(problem.title);\n        }\n      }\n    }\n\n    let inputSubjects = $(\"#input-subjects\");\n    let inputTests = $(\"#input-tests\");\n    let inputYears = $(\"#input-years\");\n    let inputDiff = $(\"#input-diff\");\n\n    let subjects = inputSubjects.val().split(\",\");\n    let tests = inputTests.val().split(\",\");\n    let yearsFrom = inputYears.data().from;\n    let yearsTo = inputYears.data().to;\n    let diffFrom = inputDiff.data().from;\n    let diffTo = inputDiff.data().to;\n\n    let pages = [];\n    let fullPages = [];\n\n    if (!subjects[0]) {\n      subjects[0] = \"(All Subjects)\";\n    }\n    if (!tests[0]) {\n      tests[0] = \"(All Tests)\";\n    }\n\n    console.log(\"getPages\", subjects, tests, yearsFrom, yearsTo, diffFrom, diffTo);\n\n    if (subjects.includes(\"(All Subjects)\")) {\n      for (let problem of allProblems) {\n        if (matchesOptions(problem, tests, yearsFrom, yearsTo, diffFrom, diffTo)) pages.push(problem);\n      }\n    } else {\n      for (let subject of subjects) {\n        if (categoryPages.some((e) => e.subject === subject)) {\n          addPagesFromArray(categoryPages.find((e) => e.subject === subject).pages);\n        } else {\n          console.log(`Loading category ${subject}...`);\n          let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n          let pagename = subject;\n          let params = `action=query&list=categorymembers` + `&cmtitle=Category:${pagename}&cmlimit=max&format=json`;\n          let paramsContinue;\n\n          let response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n          let json = await response.json();\n\n          if (json.query.categorymembers?.[0]) {\n            addPagesFromJSON(json.query.categorymembers);\n            while (json?.continue) {\n              paramsContinue = params + `&cmcontinue=${json.continue.cmcontinue}`;\n              response = await fetch(`${apiEndpoint}?${paramsContinue}&origin=*`);\n              json = await response.json();\n              addPagesFromJSON(json.query.categorymembers);\n            }\n          }\n          categoryPages.push({ subject: subject, pages: fullPages });\n          console.log(`${fullPages.length} category pages retrieved.`);\n        }\n      }\n    }\n    pages = [...new Set(pages)];\n\n    return pages;\n  }\n\n  function matchesOptions(problem, tests, yearsFrom, yearsTo, diffFrom, diffTo) {\n    console.log(\"matchesOptions\", problem, tests, yearsFrom, yearsTo, diffFrom, diffTo);\n    if (!/^\\d{4}.*Problems\\/Problem \\d+$/.test(problem)) return false;\n\n    let problemTest = computeTest(problem);\n\n    if (tests.includes(\"(AMC Tests)\")) {\n      tests.splice(tests.indexOf(\"(AMC Tests)\"), 1, \"AHSME\", \"AMC 8\", \"AMC 10\", \"AMC 12\", \"AIME\", \"USAMO\", \"IMO\");\n    }\n    if (!tests.includes(\"(All Tests)\") && !tests.includes(problemTest)) return false;\n\n    let problemYear = computeYear(problem);\n    if (problemYear < yearsFrom || yearsTo < problemYear) return false;\n\n    let problemNumber = computeNumber(problem);\n    let problemDiff = computeDifficulty(problemTest, problemNumber, problemYear);\n    if (problemDiff < diffFrom || diffTo < problemDiff) return false;\n\n    return true;\n  }\n\n  const validProblem = (problem) =>\n    problem.includes(\"Problems/Problem\") && problem.match(/^\\d{4}/) && problem.match(/\\d+$/);\n\n  const computeTest = (problem) =>\n    problem\n      .match(/(\\d{4} )(.*)( Problems)/)[2]\n      .replace(/AMC ((?:10)|(?:12))[AB]/, \"AMC $1\")\n      .replace(/AIME I+/, \"AIME\")\n      .replace(/AJHSME/, \"AMC 8\");\n  const computeYear = (problem) => problem.match(/^\\d{4}/)[0];\n  const computeNumber = (problem) => problem.match(/\\d+$/)[0];\n\n  function computeDifficulty(test, num, year) {\n    console.log(\"computeDifficulty\", test, num, year);\n    let diff;\n    switch (test) {\n      case \"AMC 8\":\n        diff =\n          num < 4\n            ? 0.25\n            : num < 7\n            ? 0.5\n            : num < 10\n            ? 0.75\n            : num < 13\n            ? 1\n            : num < 17\n            ? 1.25\n            : num < 21\n            ? 1.5\n            : num < 24\n            ? 1.75\n            : 2;\n        break;\n      case \"AMC 10\":\n        diff =\n          num < 4\n            ? 1\n            : num < 7\n            ? 1.5\n            : num < 10\n            ? 1.75\n            : num < 13\n            ? 2\n            : num < 15\n            ? 2.25\n            : num < 17\n            ? 2.5\n            : num < 19\n            ? 2.75\n            : num < 21\n            ? 3\n            : num < 23\n            ? 3.5\n            : num < 25\n            ? 4\n            : 4.5;\n        break;\n      case \"AMC 12\":\n        diff =\n          num < 4\n            ? 1.25\n            : num < 6\n            ? 1.5\n            : num < 9\n            ? 1.75\n            : num < 11\n            ? 2\n            : num < 14\n            ? 2.5\n            : num < 17\n            ? 3\n            : num < 19\n            ? 3.25\n            : num < 21\n            ? 3.5\n            : num < 23\n            ? 4\n            : num < 24\n            ? 4.5\n            : num < 25\n            ? 5\n            : 5.5;\n        break;\n      case \"AHSME\":\n        diff =\n          num < 4\n            ? 1\n            : num < 7\n            ? 1.5\n            : num < 10\n            ? 1.75\n            : num < 13\n            ? 2\n            : num < 15\n            ? 2.25\n            : num < 17\n            ? 2.5\n            : num < 19\n            ? 2.75\n            : num < 21\n            ? 3\n            : num < 23\n            ? 3.5\n            : num < 25\n            ? 4\n            : num < 27\n            ? 4.5\n            : num < 29\n            ? 5\n            : 5.5;\n        break;\n      case \"AIME\":\n        diff =\n          num < 3\n            ? 3\n            : num < 6\n            ? 3.5\n            : num < 8\n            ? 4\n            : num < 10\n            ? 4.5\n            : num < 11\n            ? 5\n            : num < 13\n            ? 5.5\n            : num < 14\n            ? 6\n            : 6.5;\n        break;\n      case \"USAJMO\":\n        diff = num == 1 || num == 4 ? 5.5 : num == 2 || num == 5 ? 6 : 7;\n        break;\n      case \"USAMO\":\n        diff = num == 1 || num == 4 ? 6.5 : num == 2 || num == 5 ? 7.5 : 8.5;\n        break;\n      case \"IMO\":\n        diff = num == 1 || num == 4 ? 6.5 : num == 2 || num == 5 ? 7.5 : 9.5;\n        break;\n      case \"Alabama ARML TST\":\n        diff = num < 4 ? 3 : num < 7 ? 3.5 : num < 10 ? 4 : num < 13 ? 4.5 : 5;\n        break;\n      case \"APMO\":\n        diff = num == 1 ? 6 : num == 2 ? 6.5 : num == 3 ? 7 : num == 4 ? 7.5 : 8.5;\n        break;\n      case \"BMO\":\n        diff = num == 1 ? 6 : num == 2 ? 6.5 : num == 3 ? 7.5 : 8;\n        break;\n      case \"Canadian MO\":\n        diff = num == 1 ? 5.5 : num == 2 ? 6 : num == 3 ? 6.5 : num == 4 ? 7 : 7.5;\n        break;\n      case \"Indonesia MO\":\n        diff = num == 1 || num == 5 ? 3.5 : num == 2 || num == 6 ? 4.5 : num == 3 || num == 7 ? 5 : 6;\n        break;\n      case \"iTest\":\n        switch (year) {\n          case \"2006\":\n          case \"2007\":\n            diff =\n              num < 5\n                ? 1\n                : num < 9\n                ? 1.5\n                : num < 13\n                ? 2\n                : num < 17\n                ? 2.5\n                : num < 21\n                ? 3\n                : num < 25\n                ? 3.5\n                : num < 29\n                ? 4\n                : num < 33\n                ? 4.5\n                : num < 37\n                ? 5\n                : 5.5;\n            break;\n          case \"2008\":\n            diff =\n              num < 11\n                ? 1\n                : num < 21\n                ? 1.5\n                : num < 31\n                ? 2\n                : num < 41\n                ? 2.5\n                : num < 51\n                ? 3\n                : num < 61\n                ? 3.5\n                : num < 71\n                ? 4\n                : num < 81\n                ? 4.5\n                : num < 91\n                ? 5\n                : 5.5;\n            break;\n        }\n        break;\n      case \"JBMO\":\n        diff = num == 1 ? 4 : num == 2 ? 4.5 : num == 3 ? 5 : 6;\n        break;\n      case \"Putnam\":\n        diff = num == 1 ? 7 : num == 2 ? 7.5 : num == 3 ? 8 : num == 4 ? 8.5 : 9;\n        break;\n      case \"UMO\":\n        diff = num == 1 ? 3 : num == 2 ? 3.5 : num == 3 ? 4 : num == 4 ? 5 : num == 5 ? 6 : 6.5;\n        break;\n      case \"UNCO Math Contest II\":\n        diff =\n          num < 2\n            ? 1\n            : num < 3\n            ? 1.5\n            : num < 4\n            ? 2\n            : num < 5\n            ? 2.5\n            : num < 6\n            ? 3\n            : num < 7\n            ? 3.5\n            : num < 8\n            ? 4\n            : num < 9\n            ? 4.5\n            : num < 10\n            ? 5\n            : 5.5;\n        break;\n      case \"UNM-PNM Statewide High School Mathematics Contest II\":\n        diff =\n          num < 3 ? 2 : num < 4 ? 2.5 : num < 5 ? 3 : num < 6 ? 3.5 : num < 8 ? 4 : num < 9 ? 4.5 : num < 10 ? 5 : 5.5;\n        break;\n      default:\n        diff = -1;\n        break;\n    }\n    return diff;\n  }\n\n  // Sorts\n  const sortProblems = (problems) =>\n    problems.sort(\n      (a, b) =>\n        Math.sign(computeYear(a) - computeYear(b)) ||\n        computeTest(a).localeCompare(computeTest(b)) ||\n        Math.sign(computeNumber(a) - computeNumber(b))\n    );\n\n  // Splits and adds problem parts\n  function getProblem(htmlString) {\n    console.log(\"getProblem\", htmlString);\n\n    let htmlParsed = $.parseHTML(htmlString);\n    let after = $(htmlParsed)\n      .children()\n      .not(\".toc\")\n      .not(\"dl:first-child\")\n      .first()\n      .nextUntil(\":header:not(:contains('Problem'))\")\n      .addBack()\n      .not(\".toc\")\n      .not(\"p:last-child > br:first-child\")\n      .not(\":header\");\n\n    let afterHTML = $(after)\n      .map(function () {\n        return this.outerHTML;\n      })\n      .get()\n      .join(\"\");\n    return afterHTML;\n  }\n\n  function getSolutions(htmlString) {\n    console.log(\"getSolutions\", htmlString);\n\n    let htmlParsed = $.parseHTML(htmlString);\n    let after = $(htmlParsed)\n      .children()\n      .filter(\":header:contains('Solution'),:header:contains('Diagram')\")\n      .nextUntil(\":header:contains('See'), table\")\n      .addBack(\n        \":header:contains(' Solution'), :header:contains('Solution '), :header:contains('Solution '), :header:contains('Diagram')\"\n      )\n      .not(\"p:contains('The problems on this page are copyrighted by the')\");\n\n    let afterHTML = $(after)\n      .map(function () {\n        return this.outerHTML;\n      })\n      .get()\n      .join(\"\");\n    return afterHTML;\n  }\n\n  function addProblems(problems, addReplace) {\n    console.log(\"addProblems\", problems, addReplace);\n\n    let problemList = problems.map((e) => titleCleanup(e.title)).join(\", \");\n    $(\"#batch-text\").before(\n      `<div class=\"section-options\">\n        <button class=\"text-button section-button\" id=\"copy-problems\"\n          data-clipboard-text=\"${problemList}\" title=\"This list can be copied into ` +\n        `fields for multiple problems, such as making a custom Problem Set.\">\n          Copy problem list\n        </button> ⋅ <button class=\"text-button section-button\" tabindex=\"0\"\n        onclick=\"window.print()\">\n          Print this page\n        </button>\n      </div>`\n    );\n    new ClipboardJS(\"#copy-problems\");\n\n    for (let [index, problem] of problems.entries()) {\n      $(\"#batch-text\").append(`<div class=\"article-problem\"\n        index=\"${index + 1}\" difficulty=\"${problem.difficulty}\">\n        <h2 class=\"problem-heading\">Problem ${index + 1}\n          <span class=\"source-link\">\n            (<a class=\"source-link-a\"\n              href=\"?page=${underscores(problem.title)}\">${titleCleanup(problem.title)}</a>)\n          </span>${addReplace ? replaceButton : ``}\n        </h2>${problem.problem}\n      </div>`);\n\n      $(\"#solutions-text\").append(`<div class=\"article-problem\" \n        index=\"${index + 1}\" difficulty=\"${problem.difficulty}\">\n        <h2 class=\"problem-heading\">\n          Problem ${index + 1}\n          <span class=\"source-link\">\n            (<a class=\"source-link-a\"\n              href=\"?page=${underscores(problem.title)}\">${titleCleanup(problem.title)}</a>)\n          </span>\n        </h2>${problem.problem}\n        <div class=\"solutions-divider\">Solution</div>\n        ${problem.solutions}\n      </div>`);\n    }\n  }\n\n  // Formatting\n  const sanitize = (string) =>\n    string.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n  const formatLatex = (string) =>\n    string\n      .replace(/&#160;/g, \" \")\n      .replace(/&#39;/g, \"'\")\n      .replace(/&amp;/g, \"&\")\n      .replace(/&quot;/g, '\"')\n      .replace(/^\\$|\\$$|\\\\\\[|\\\\\\]/g, \"\")\n      .replace(/&lt;/g, \"\\\\lt \")\n      .replace(/&gt;/g, \"\\\\gt \")\n      .replace(/\\$/g, \"\\\\$$\")\n      .replace(/align\\*/g, \"aligned\")\n      .replace(/eqnarray\\*/g, \"aligned\")\n      .replace(/{tabular}(\\[\\w\\])*/g, \"{array}\")\n      .replace(/\\\\bold{/g, \"\\\\mathbf{\")\n      .replace(/\\\\congruent/g, \"\\\\cong\")\n      .replace(/\\\\overarc/g, \"\\\\overgroup\")\n      .replace(/\\\\overparen/g, \"\\\\overgroup\")\n      .replace(/\\\\underarc/g, \"\\\\undergroup\")\n      .replace(/\\\\underparen/g, \"\\\\undergroup\")\n      .replace(/\\\\mathdollar/g, \"\\\\$\")\n      .replace(/\\\\textdollar/g, \"\\\\$\");\n\n  const titleCleanup = (string) =>\n    decodeURIComponent(string).replace(/_/g, \" \").replace(\"Problems/Problem \", \"#\").replace(/'/g, \"’\");\n  const underscores = (string) => string.replace(/ /g, \"_\").replace(/%2F/g, \"/\");\n  const capitalize = (string) => {\n    if (typeof string !== \"string\") return \"\";\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const latexer = (html) => {\n    html = html.replace(/<pre>\\s+?(.*?)<\\/pre>/gs, \"<p style='white-space: pre-line;'>$1</p>\");\n\n    let images = html.match(/<img (?:.*?) class=\"latex\\w*?\" (?:.*?)>/g);\n    images = [...new Set(images)];\n\n    if (images) {\n      for (let image of images) {\n        if (!image.includes(\"[asy]\")) {\n          let isDisplay = /alt=\"\\\\\\[|\\\\begin/.test(image);\n          let imageLatex = formatLatex(image.match(/alt=\"(.*?)\"/)[1]);\n          let renderedLatex = katex.renderToString(imageLatex, {\n            throwOnError: false,\n            displayMode: isDisplay,\n          });\n          html = html.replaceAll(\n            image,\n            `<span class=\"fallback-container\">$&</span>` + `<katex class=\"katex-container\">${renderedLatex}</katex>`\n          );\n        }\n      }\n    }\n    return html;\n  };\n\n  const sourceCleanup = (string) =>\n    string\n      .replace(\n        /<span class=\"fallback-container\">.*?<\\/span><katex class=\"katex-container\">.*?<annotation encoding=\"application\\/x-tex\">(.*?)<\\/annotation>.*?<\\/katex>/gs,\n        \"$$$1$$\"\n      )\n      .replace(\n        /<span class=\"mw-headline\" id=\"Problem\">Problem<\\/span><span class=\"mw-editsection\"><span class=\"mw-editsection-bracket\">\\[<\\/span><a href=\".*?\" title=\"Edit section: Problem\">edit<\\/a><span class=\"mw-editsection-bracket\">\\]<\\/span><\\/span><\\/h2>/g,\n        \"\"\n      )\n      .replace(/<span class=\"mw-headline\" id=\".*?\">(.*?)<\\/span>/g, \"$1\")\n      .replace(/<span class=\"mw-editsection\">.*?<\\/span><\\/span>/g, \"\")\n      .replace(/<a.*?>/g, \"\")\n      .replace(/<\\/a>/g, \"\")\n      .replace(/<br.*?>/g, \"\")\n      .replace(/<dl>.*?<\\/dl>/g, \"\")\n      .replace(/<img.*?>/g, \"\")\n      .replace(/<p>/g, \"\")\n      .replace(/<\\/p>/g, \"\");\n\n  // Nav elements\n  $(\"#single-problem\").click(() => {\n    clearAll();\n    activeButton(\"single-problem\");\n\n    $(\"#main-button-container\").after(\n      `<div class=\"button-container\" id=\"secondary-button-container\">\n        <button type=\"button\" class=\"button secondary-button\"\n          id=\"random-nav\">\n          Random\n        </button>\n        <button type=\"button\" class=\"button secondary-button\"\n          id=\"single-nav\">\n          Select\n        </button>\n        <div class=\"secondary-spacer\"></div>\n      </div>`\n    );\n    $(\"#random-nav\").click();\n    $(\"#random-input\").after($(\".practice-progress\"));\n  });\n\n  $(\"#problem-batch\").click(() => {\n    clearAll();\n    activeButton(\"problem-batch\");\n\n    $(\"#main-button-container\").after(\n      `<div class=\"button-container\" id=\"secondary-button-container\">\n        <button type=\"button\" class=\"button secondary-button\" id=\"ranbatch-nav\">\n          Random\n        </button>\n        <button type=\"button\" class=\"button secondary-button\" id=\"batch-nav\">\n          Past Test\n        </button>\n        <button type=\"button\" class=\"button secondary-button \n        button-flex-full\" id=\"problems-nav\">\n          Custom\n        </button>\n        <div class=\"secondary-spacer\"></div>\n      </div>`\n    );\n    $(\"#ranbatch-nav\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#single-nav\", () => {\n    clearOptions();\n    activeSecondaryButton(\"single-nav\");\n\n    $(\"#secondary-button-container\").after(\n      `<div class=\"options-input\" id=\"single-input\">\n        <input class=\"input-field input-singletest input-flexone-half\"\n          type=\"text\"\n          id=\"input-singletest\"\n          placeholder=\"Test\"\n          data-whitelist=\"${testsList}\">\n        </input>\n        <input class=\"input-field input-flexone-half\n          input-singlever\"\n          type=\"text\"\n          id=\"input-singlever\"\n          placeholder=\"Version\"\n          data-whitelist=\"A,B,Fall A,Fall B,I,II\">\n        </input>\n        <input class=\"input-field\"\n          type=\"number\"\n          min=\"1974\"\n          max=\"2022\"\n          id=\"input-singleyear\"\n          placeholder=\"Year\">\n        </input>\n        <input class=\"input-field\"\n          type=\"number\"\n          min=\"1\"\n          max=\"30\"\n          id=\"input-singlenum\"\n          placeholder=\"#\">\n        </input>\n        <button class=\"input-button\" id=\"single-button\">\n          Go!\n        </button>\n      </div>\n      ${notes}`\n    );\n    updateYear();\n    collapseText();\n    directLinks();\n\n    $(\"#input-singletest\").tagify({\n      mode: \"select\",\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n      },\n    });\n\n    $(\"#input-singlever\").tagify({\n      mode: \"select\",\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n      },\n    });\n  });\n\n  $(\".page-container\").on(\"click\", \"#random-nav\", () => {\n    clearOptions();\n    activeSecondaryButton(\"random-nav\");\n\n    $(\"#secondary-button-container\").after(\n      `<div class=\"options-input\" id=\"random-input\">\n        ${problemOptions}${yearOption}${difficultyOption}\n        <button class=\"input-button input-button-full\" id=\"random-button\">\n          Go!\n        </button>\n      </div>\n      ${difficultyChart}\n      ${notes}`\n    );\n    $(\"#random-input\").after($(\".practice-progress\"));\n    renderChart();\n    collapseText();\n    directLinks();\n\n    $(\"#input-subjects\").tagify({\n      whitelist: whitelist,\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n        mapValueTo: (e) => e.value.replace(\" Problems\", \"\"),\n      },\n      templates: {\n        tag: subjectTag,\n      },\n    });\n    $(\"#input-tests\").tagify({\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n      },\n    });\n\n    $(\"#input-years\").ionRangeSlider({\n      type: \"double\",\n      grid: true,\n      min: 1974,\n      max: 2022,\n      from: 2010,\n      to: 2022,\n      prettify_enabled: false,\n    });\n    $(\"#input-diff\").ionRangeSlider({\n      type: \"double\",\n      grid: true,\n      min: 0,\n      max: 10,\n      from: 0,\n      to: 10,\n      step: 0.5,\n    });\n\n    if (!JSON.parse(localStorage.getItem(\"autogenOff\"))) $(\"#random-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#amc8-single\", () => {\n    $(\"#single-problem\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AMC 8\"]);\n    $(\"#random-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#amc8-test\", () => {\n    $(\"#problem-batch\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AMC 8\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 0, to: 2 });\n    $(\"#input-number\").data(\"ionRangeSlider\").update({ from: 25 });\n    $(\"#ranbatch-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#amc10-single\", () => {\n    $(\"#single-problem\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AMC 10\"]);\n    $(\"#random-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#amc10-test\", () => {\n    $(\"#problem-batch\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AMC 10\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 1, to: 4.5 });\n    $(\"#input-number\").data(\"ionRangeSlider\").update({ from: 25 });\n    $(\"#ranbatch-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#amc12-single\", () => {\n    $(\"#single-problem\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AMC 12\"]);\n    $(\"#random-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#amc12-test\", () => {\n    $(\"#problem-batch\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AMC 12\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 1, to: 5.5 });\n    $(\"#input-number\").data(\"ionRangeSlider\").update({ from: 25 });\n    $(\"#ranbatch-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#aime-single\", () => {\n    $(\"#single-problem\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AIME\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 3, to: 6.5 });\n    $(\"#random-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#aime-test\", () => {\n    $(\"#problem-batch\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"AIME\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 3, to: 6.5 });\n    $(\"#input-number\").data(\"ionRangeSlider\").update({ from: 15 });\n    $(\"#ranbatch-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#usajmo-single\", () => {\n    $(\"#single-problem\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"USAJMO\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 5.5, to: 7 });\n    $(\"#random-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#usajmo-test\", () => {\n    $(\"#problem-batch\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"USAJMO\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 5.5, to: 7 });\n    $(\"#input-number\").data(\"ionRangeSlider\").update({ from: 6 });\n    $(\"#ranbatch-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#usamo-single\", () => {\n    $(\"#single-problem\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"USAMO\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 6.5, to: 8.5 });\n    $(\"#random-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#usamo-test\", () => {\n    $(\"#problem-batch\").click();\n    $(\"#input-tests\").data(\"tagify\").addTags([\"USAMO\"]);\n    $(\"#input-diff\").data(\"ionRangeSlider\").update({ from: 6.5, to: 8.5 });\n    $(\"#input-number\").data(\"ionRangeSlider\").update({ from: 6 });\n    $(\"#ranbatch-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#batch-nav\", () => {\n    let optionsUncollapsed;\n    if ($(\".options-container\").length && !$(\".options-container\").hasClass(\"text-collapsed\"))\n      optionsUncollapsed = true;\n\n    clearOptions();\n    activeSecondaryButton(\"batch-nav\");\n\n    $(\"#secondary-button-container\").after(\n      `<div class=\"options-input\" id=\"batch-input\">\n        <input class=\"input-field input-singletest input-flex-half\"\n          type=\"text\"\n          id=\"input-singletest\"\n          placeholder=\"Test\"\n          data-whitelist=\"${testsList}\">\n        </input>\n        <input class=\"input-field input-flex-half\n          input-singlever\"\n          type=\"text\"\n          id=\"input-singlever\"\n          placeholder=\"Version\"\n          data-whitelist=\"A,B,Fall A,Fall B,I,II\">\n        </input>\n          <input class=\"input-field\" type=\"number\" min=\"1974\" max=\"2022\"\n          id=\"input-singleyear\" placeholder=\"Year\">\n          </input>\n        <button class=\"input-button\" id=\"batch-button\">\n          Go!\n        </button>\n      </div>\n      ${moreOptions}\n      ${notes}`\n    );\n    $(\"#sort-container\").remove();\n    $(\"#input-hide\").prop(\"checked\", true);\n    if (optionsUncollapsed) $(\".options-container\").removeClass(\"text-collapsed\");\n    updateYear();\n    collapseText();\n    directLinks();\n    nameLive();\n    breakLive();\n    hideToggle();\n\n    $(\"#input-singletest\").tagify({\n      mode: \"select\",\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n      },\n    });\n\n    $(\"#input-singlever\").tagify({\n      mode: \"select\",\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n      },\n    });\n  });\n\n  $(\".page-container\").on(\"click\", \"#problems-nav\", () => {\n    let optionsUncollapsed;\n    if ($(\".options-container\").length && !$(\".options-container\").hasClass(\"text-collapsed\"))\n      optionsUncollapsed = true;\n\n    clearOptions();\n    activeSecondaryButton(\"problems-nav\");\n\n    $(\"#secondary-button-container\").after(\n      `<div class=\"options-input\" id=\"problems-input\">\n        <input class=\"input-field\" id=\"input-problems\"\n        type=\"text\" placeholder=\"Problems (paste problem lists here!)\"\n        data-whitelist=\"${sortProblems(allProblems)\n          .map((e) => titleCleanup(e))\n          .toString()}\">\n        <button class=\"input-button\" id=\"problems-button\">\n          Go!\n        </button>\n      </div>\n      ${moreOptions}\n      ${notes}`\n    );\n    if (optionsUncollapsed) $(\".options-container\").removeClass(\"text-collapsed\");\n    collapseText();\n    directLinks();\n    nameLive();\n    breakLive();\n    hideToggle();\n\n    $(\"#input-problems\").tagify({\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n      },\n    });\n  });\n\n  $(\".page-container\").on(\"click\", \"#ranbatch-nav\", () => {\n    let optionsUncollapsed;\n    if ($(\".options-container\").length && !$(\".options-container\").hasClass(\"text-collapsed\"))\n      optionsUncollapsed = true;\n\n    clearOptions();\n    activeSecondaryButton(\"ranbatch-nav\");\n\n    $(\"#secondary-button-container\").after(\n      `<div class=\"options-input\" id=\"ranbatch-input\">\n        ${problemOptions}${difficultyOption}\n        <div class=\"input-container input-flex-full\">\n          <label class=\"range-label\">\n            # of problems\n          </label>\n          <input class=\"input-range\" id=\"input-number\"/>\n        </div>\n        <button class=\"input-button input-button-full\" id=\"ranbatch-button\">\n          Go!\n        </button>\n      </div>\n      ${moreOptions}\n      ${difficultyChart}\n      ${notes}`\n    );\n    if (optionsUncollapsed) $(\".options-container\").removeClass(\"text-collapsed\");\n    $(\"#more-options\").append(`${yearFullOption}\n      <input class=\"input-field input-flex-full\" id=\"input-problems\"\n      type=\"text\" placeholder=\"Problems to always include (paste lists here!)\"\n      data-whitelist=\"${sortProblems(allProblems)\n        .map((e) => titleCleanup(e))\n        .toString()}\">\n      <input class=\"input-field input-flex-full\" id=\"input-skip\"\n      type=\"text\" placeholder=\"Problems to exclude (paste lists here!)\"\n      data-whitelist=\"${sortProblems(allProblems)\n        .map((e) => titleCleanup(e))\n        .toString()}\">`);\n    collapseText();\n    directLinks();\n    nameLive();\n    breakLive();\n    hideToggle();\n\n    $(\"#input-subjects\").tagify({\n      whitelist: whitelist,\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n        mapValueTo: (e) => e.value.replace(\" Problems\", \"\"),\n      },\n      templates: {\n        tag: subjectTag,\n      },\n    });\n    $(\"#input-tests\").tagify({\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n        maxItems: 100,\n      },\n    });\n    $(\"#input-problems\").tagify({\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n      },\n    });\n    $(\"#input-skip\").tagify({\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        enabled: 0,\n      },\n    });\n\n    $(\"#input-years\").ionRangeSlider({\n      type: \"double\",\n      grid: true,\n      min: 1974,\n      max: 2022,\n      from: 2010,\n      to: 2022,\n      prettify_enabled: false,\n    });\n    $(\"#input-diff\").ionRangeSlider({\n      type: \"double\",\n      grid: true,\n      min: 0,\n      max: 10,\n      from: 0,\n      to: 10,\n      step: 0.5,\n    });\n    $(\"#input-number\").ionRangeSlider({\n      grid: true,\n      min: 0,\n      max: 40,\n      from: 5,\n    });\n\n    if (!JSON.parse(localStorage.getItem(\"autogenOff\"))) $(\"#ranbatch-button\").click();\n  });\n\n  $(\".page-container\").on(\"click\", \"#search-nav\", () => {\n    clearAll();\n    activeButton(\"search-nav\");\n\n    $(\"#main-button-container\").after(\n      `<div class=\"options-input\" id=\"search-input\">\n        <div class=\"input-container checkbox-container\n          checkbox-container-smaller input-flexino-full\">\n          <div class=\"checkbox-wrap\">\n            <input type=\"checkbox\" class=\"input-check\" id=\"input-problemsonly\"/>\n            <label class=\"checkbox-label\">\n              Show problems only\n            </label>\n          </div>\n        </div>\n        <input class=\"input-field input-end\" id=\"input-search\"\n          type=\"text\" placeholder=\"Keywords (e.g. Cauchy)\">\n        <button class=\"input-button input-button-half\" id=\"search-button\">\n          Search!\n        </button>\n        <button class=\"input-button input-button-half\" id=\"theorem-button\">\n          Random Theorem\n        </button>\n      </div>\n      ${notes}`\n    );\n    collapseText();\n    directLinks();\n\n    $(\"#input-search\").tagify({\n      mode: \"select\",\n      originalInputValueFormat: (values) => values.map((e) => e.value),\n      dropdown: {\n        maxItems: 7,\n      },\n      whitelist: allPages,\n    });\n  });\n\n  // Buttons\n  $(\".page-container\").on(\"click\", \"#single-button\", async () => {\n    clearProblem();\n\n    if (\n      !($(\"#input-singletest\").val() + $(\"#input-singlever\").val() in validYears) ||\n      $(\"#input-singleyear\").val() < validYears[$(\"#input-singletest\").val() + $(\"#input-singlever\").val()].min ||\n      $(\"#input-singleyear\").val() > validYears[$(\"#input-singletest\").val() + $(\"#input-singlever\").val()].max\n    ) {\n      $(\".notes\").before(\n        `<div class=\"problem-section\">\n          <h2 class=\"section-header\" id=\"article-header\">Error</h2>\n          <p class=\"error\">\n          The given test is not available for that year.\n        </p>\n        </div>`\n      );\n    } else {\n      let preTest = \"\";\n      let postTest = \"\";\n      let version = $(\"#input-singlever\").val();\n\n      if (version) {\n        if (version.split(\" \").length > 1) {\n          preTest = version.split(\" \")[0] + \" \";\n          postTest = version.split(\" \")[1];\n        } else if (version === \"I\" || version === \"II\") {\n          postTest = \" \" + version;\n        } else {\n          postTest = version;\n        }\n      }\n      await addProblem(\n        sanitize(\n          `${$(\"#input-singleyear\").val()} ${preTest}${$(\"#input-singletest\").val()}${postTest} Problems/Problem ${$(\n            \"#input-singlenum\"\n          ).val()}`\n        ),\n        true\n      );\n    }\n  });\n\n  $(\".page-container\").on(\"click\", \"#random-button\", async () => {\n    console.log(\"amc12-single\");\n\n    clickedTimes++;\n    let clickedTimesThen = clickedTimes;\n    answerTimes = 0;\n    clearProblem();\n\n    let pages = await getPages();\n    console.log(`${pages.length} total problems retrieved.`);\n\n    if (!pages.length) {\n      $(\".notes\").before(\n        `<div class=\"problem-section\">\n          <h2 class=\"section-header\" id=\"article-header\">Error</h2>\n          <p class=\"error\">\n            No problems could be found meeting those requirements.\n          </p>\n        </div>`\n      );\n    } else {\n      let invalid = true;\n      let response = true;\n      while (invalid && clickedTimes === clickedTimesThen + answerTimes && answerTimes < 3) {\n        clearProblem();\n\n        let randomPage = pages[Math.floor(Math.random() * pages.length)];\n        console.log(randomPage);\n        if (clickedTimes === clickedTimesThen + answerTimes) response = await addProblem(randomPage, true);\n        invalid = !response;\n      }\n    }\n  });\n\n  $(\".page-container\").on(\"click\", \"#batch-button\", async () => {\n    async function makeBatch(fullTest) {\n      console.log(fullTest);\n      let problemTitles = sortProblems(allProblems).filter((e) =>\n        e.includes(sanitize(`${$(\"#input-singleyear\").val()} ${fullTest} Problems/Problem `))\n      );\n      let redirList = [];\n      let redirIndex = [];\n      let numProblems = problemTitles.length;\n      let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n\n      $(\"#batch-header\").after(\n        `<div class=\"loading-notice\">\n          <div class=\"loading-text\">Loading problems…</div>\n          <div class=\"loading-bar-container\">\n            <div class=\"loading-bar\"></div>\n          </div>\n        </div>`\n      );\n\n      let paramsList = problemTitles.map((currentProblem) => `action=parse&page=${currentProblem}&format=json`);\n      console.log(paramsList);\n      let responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n      console.log(responseList);\n      let jsonList = await Promise.all(responseList.map((response) => response.json()));\n      console.log(jsonList);\n\n      for (let [index, currentProblem] of problemTitles.entries()) {\n        let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n        let problemProblem = getProblem(problemText);\n        let problemSolutions = getSolutions(problemText);\n\n        if (problemProblem && problemSolutions) {\n          problems.push({\n            title: currentProblem,\n            difficulty: computeDifficulty(\n              computeTest(currentProblem),\n              computeNumber(currentProblem),\n              computeYear(currentProblem)\n            ),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n        } else if (problemText.includes(\"Redirect to:\")) {\n          console.log(\"Redirect problem, going there instead...\");\n\n          let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n          let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n          console.log(redirPage);\n          redirList.push(redirPage);\n          redirIndex.push(index);\n\n          $(\".loading-bar\").css(\"width\", `${(problems.length / numProblems) * 100}%`);\n        } else {\n          console.log(\"Invalid problem, skipping...\");\n        }\n      }\n\n      if (redirList[0]) {\n        paramsList = redirList.map((redirPage) => `action=parse&page=${redirPage}&format=json`);\n        console.log(paramsList);\n        responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n        console.log(responseList);\n        jsonList = await Promise.all(responseList.map((response) => response.json()));\n        console.log(jsonList);\n\n        for (let [index, currentProblem] of redirList.entries()) {\n          let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n          let problemProblem = getProblem(problemText);\n          let problemSolutions = getSolutions(problemText);\n\n          problems.splice(redirIndex[index], 0, {\n            title: currentProblem,\n            difficulty: computeDifficulty(\n              computeTest(currentProblem),\n              computeNumber(currentProblem),\n              computeYear(currentProblem)\n            ),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n        }\n      }\n\n      if (clickedTimes === clickedTimesThen) {\n        addHistoryBatch(\n          problems.map((e) => e.title),\n          sourceCleanup(problems[0].problem).substring(0, 140),\n          $(\"#input-name\").val()\n            ? sanitize($(\"#input-name\").val())\n            : sanitize(`${$(\"#input-singleyear\").val()} ${fullTest}`),\n          $(\"#input-singleyear\").val(),\n          fullTest\n        );\n\n        console.log(problems);\n        addProblems(problems, false);\n      }\n    }\n\n    clickedTimes++;\n    let clickedTimesThen = clickedTimes;\n    clearProblem();\n\n    addBatch();\n\n    let problems = [];\n    if (!$(\"#input-singletest\").val()) {\n      $(\".article-text\").before(\n        `<p class=\"error\">\n          No test was entered.\n        </p>`\n      );\n      $(\".article-text\").remove();\n      $(\"#batch-header\").html(\"Error\");\n      $(\"#solutions-section\").remove();\n    } else if (\n      !($(\"#input-singletest\").val() + $(\"#input-singlever\").val() in validYears) ||\n      $(\"#input-singleyear\").val() < validYears[$(\"#input-singletest\").val() + $(\"#input-singlever\").val()].min ||\n      $(\"#input-singleyear\").val() > validYears[$(\"#input-singletest\").val() + $(\"#input-singlever\").val()].max\n    ) {\n      $(\".article-text\").before(\n        `<p class=\"error\">\n          The given test is not available for that year.\n        </p>`\n      );\n      $(\".article-text\").remove();\n      $(\"#batch-header\").html(\"Error\");\n      $(\"#solutions-section\").remove();\n      $(\".display-settings\").remove();\n    } else {\n      let fullTest;\n      let preTest = \"\";\n      let postTest = \"\";\n      let version = $(\"#input-singlever\").val();\n\n      if (version) {\n        if (version.split(\" \").length > 1) {\n          preTest = version.split(\" \")[0] + \" \";\n          postTest = version.split(\" \")[1];\n        } else if (version === \"I\" || version === \"II\") {\n          postTest = \" \" + version;\n        } else {\n          postTest = version;\n        }\n      }\n      fullTest = `${preTest}${$(\"#input-singletest\").val()}${postTest}`;\n\n      await makeBatch(fullTest);\n\n      if (clickedTimes === clickedTimesThen) {\n        $(\".loading-notice\").remove();\n        katexFallback();\n        customText();\n        let name = $(\"#input-name\").val()\n          ? sanitize($(\"#input-name\").val())\n          : sanitize(`${$(\"#input-singleyear\").val()} ${fullTest}`);\n        $(\"#batch-header\").html(name);\n        document.title = name + \" - Trivial Math Practice\";\n\n        history.pushState(\n          {\n            problems: problems.map((e) => underscores(e.title)).join(\"|\"),\n            testyear: $(\"#input-singleyear\").val(),\n            testname: fullTest,\n          },\n          name + \" - Trivial Math Practice\",\n          `?problems=${problems.map((e) => underscores(e.title)).join(\"|\")}&testyear=${$(\n            \"#input-singleyear\"\n          ).val()}&testname=${fullTest}`\n        );\n        searchParams = new URLSearchParams(location.search);\n        lastParam = searchParams.get(\"problems\");\n        fixLinks();\n        collapseSolutions();\n        directLinks();\n        displaySettings();\n        hideLinks();\n        breakSets();\n        addBatchAnswers(\n          problems.map((e) => e.title),\n          fullTest,\n          $(\"#input-singleyear\").val()\n        );\n      }\n    }\n  });\n\n  $(\".page-container\").on(\"click\", \"#problems-button\", async () => {\n    async function makeBatch() {\n      let problemTitles = inputProblems\n        .val()\n        .split(\",\")\n        .map((e) => e.replace(\"#\", \"Problems/Problem \"));\n      let redirList = [];\n      let redirIndex = [];\n      let numProblems = problemTitles.length;\n      let invalidProblems = 0;\n\n      let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n\n      $(\"#batch-header\").after(\n        `<div class=\"loading-notice\">\n          <div class=\"loading-text\">Loading problems…</div>\n          <div class=\"loading-bar-container\">\n            <div class=\"loading-bar\"></div>\n          </div>\n        </div>`\n      );\n\n      let paramsList = problemTitles.map((currentProblem) => `action=parse&page=${currentProblem}&format=json`);\n      console.log(paramsList);\n      let responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n      console.log(responseList);\n      let jsonList = await Promise.all(responseList.map((response) => response.json()));\n      console.log(jsonList);\n\n      for (let [index, currentProblem] of problemTitles.entries()) {\n        let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n        let problemProblem = getProblem(problemText);\n        let problemSolutions = getSolutions(problemText);\n\n        if (problemProblem && problemSolutions) {\n          problems.push({\n            title: currentProblem,\n            difficulty: computeDifficulty(\n              computeTest(currentProblem),\n              computeNumber(currentProblem),\n              computeYear(currentProblem)\n            ),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n\n          $(\".loading-bar\").css(\"width\", `${((problems.length + invalidProblems) / numProblems) * 100}%`);\n        } else if (problemText.includes(\"Redirect to:\")) {\n          console.log(\"Redirect problem, going there instead...\");\n\n          let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n          let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n          console.log(redirPage);\n          redirList.push(redirPage);\n          redirIndex.push(index);\n\n          $(\".loading-bar\").css(\"width\", `${((problems.length + invalidProblems) / numProblems) * 100}%`);\n        } else {\n          console.log(\"Invalid problem, skipping...\");\n          invalidProblems++;\n        }\n      }\n\n      if (redirList[0]) {\n        paramsList = redirList.map((redirPage) => `action=parse&page=${redirPage}&format=json`);\n        console.log(paramsList);\n        responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n        console.log(responseList);\n        jsonList = await Promise.all(responseList.map((response) => response.json()));\n        console.log(jsonList);\n\n        for (let [index, currentProblem] of redirList.entries()) {\n          let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n          let problemProblem = getProblem(problemText);\n          let problemSolutions = getSolutions(problemText);\n\n          problems.splice(redirIndex[index], 0, {\n            title: currentProblem,\n            difficulty: computeDifficulty(\n              computeTest(currentProblem),\n              computeNumber(currentProblem),\n              computeYear(currentProblem)\n            ),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n        }\n      }\n\n      if (clickedTimes === clickedTimesThen) {\n        if ($(\"#input-sort\").prop(\"checked\")) problems.sort((a, b) => a.difficulty - b.difficulty);\n\n        addHistoryBatch(\n          problems.map((e) => e.title),\n          sourceCleanup(problems[0].problem).substring(0, 140),\n          $(\"#input-name\").val()\n        );\n\n        console.log(problems);\n        addProblems(problems, false);\n      }\n    }\n\n    clickedTimes++;\n    let clickedTimesThen = clickedTimes;\n    clearProblem();\n\n    addBatch();\n\n    let problems = [];\n    let inputProblems = $(\"#input-problems\");\n    if (!inputProblems.val()) {\n      $(\".article-text\").before(\n        `<p class=\"error\">\n          No problems were entered.\n        </p>`\n      );\n      $(\".article-text\").remove();\n      $(\"#batch-header\").html(\"Error\");\n      $(\"#solutions-section\").remove();\n    } else {\n      await makeBatch();\n    }\n\n    if (clickedTimes === clickedTimesThen) {\n      let name = $(\"#input-name\").val();\n      history.pushState(\n        { problems: problems.map((e) => underscores(e.title)).join(\"|\") },\n        name + \" - Trivial Math Practice\",\n        \"?problems=\" + problems.map((e) => underscores(e.title)).join(\"|\")\n      );\n      searchParams = new URLSearchParams(location.search);\n      lastParam = searchParams.get(\"problems\");\n\n      $(\".loading-notice\").remove();\n      katexFallback();\n      customText();\n      changeName();\n      fixLinks();\n      collapseSolutions();\n      directLinks();\n      displaySettings();\n      hideLinks();\n      breakSets();\n      addBatchAnswers(problems.map((e) => e.title));\n    }\n  });\n\n  $(\".page-container\").on(\"click\", \"#ranbatch-button\", async () => {\n    async function makeBatch() {\n      let numProblems = Math.min(inputNumber.data().from, pages.length);\n      let randomPage;\n      let pageIndex;\n      let randomList = [];\n      let redirList = [];\n      let redirIndex = [];\n      let problemTitles = inputProblems\n        .val()\n        .split(\",\")\n        .map((e) => e.replace(\"#\", \"Problems/Problem \"));\n      let skipProblems = inputSkip\n        .val()\n        .split(\",\")\n        .map((e) => e.replace(\"#\", \"Problems/Problem \"));\n\n      let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n      let params;\n      let response;\n      let json;\n\n      if (clickedTimes === clickedTimesThen)\n        $(\"#batch-header\").after(\n          `<div class=\"loading-notice\">\n          <div class=\"loading-text\">Loading problems…</div>\n          <div class=\"loading-bar-container\">\n            <div class=\"loading-bar\"></div>\n          </div>\n        </div>`\n        );\n\n      if (inputProblems.val()) {\n        let paramsList = problemTitles.map((currentProblem) => `action=parse&page=${currentProblem}&format=json`);\n        console.log(paramsList);\n        let responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n        console.log(responseList);\n        let jsonList = await Promise.all(responseList.map((response) => response.json()));\n        console.log(jsonList);\n\n        for (let [index, currentProblem] of problemTitles.entries()) {\n          let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n          let problemProblem = getProblem(problemText);\n          let problemSolutions = getSolutions(problemText);\n\n          if (problemProblem && problemSolutions) {\n            problems.push({\n              title: currentProblem,\n              difficulty: computeDifficulty(\n                computeTest(currentProblem),\n                computeNumber(currentProblem),\n                computeYear(currentProblem)\n              ),\n              problem: problemProblem,\n              solutions: problemSolutions,\n            });\n\n            $(\".loading-bar\").css(\"width\", `${(problems.length / numProblems) * 100}%`);\n          } else if (problemText.includes(\"Redirect to:\")) {\n            console.log(\"Redirect problem, going there instead...\");\n\n            let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n            let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n            console.log(redirPage);\n            redirList.push(redirPage);\n            redirIndex.push(index);\n\n            $(\".loading-bar\").css(\"width\", `${(problems.length / numProblems) * 100}%`);\n          } else {\n            console.log(\"Invalid problem, skipping...\");\n          }\n        }\n      }\n      while (\n        randomList.length + problems.length < numProblems &&\n        pages.length !== 0 &&\n        clickedTimes === clickedTimesThen\n      ) {\n        let blockedProblem = true;\n\n        while (blockedProblem) {\n          pageIndex = Math.floor(Math.random() * pages.length);\n          randomPage = pages[pageIndex];\n\n          blockedProblem = skipProblems.includes(randomPage);\n          if (blockedProblem) pages.splice(pageIndex, 1);\n        }\n        randomList.push(randomPage);\n        pages.splice(pageIndex, 1);\n      }\n\n      let paramsList = randomList.map((currentProblem) => `action=parse&page=${currentProblem}&format=json`);\n      console.log(paramsList);\n      let responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n      console.log(responseList);\n      let jsonList = await Promise.all(responseList.map((response) => response.json()));\n      console.log(jsonList);\n\n      for (let [index, randomPage] of randomList.entries()) {\n        let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n        let problemProblem = getProblem(problemText);\n        let problemSolutions = getSolutions(problemText);\n\n        if (problemProblem && problemSolutions) {\n          problems.push({\n            title: randomPage,\n            difficulty: computeDifficulty(computeTest(randomPage), computeNumber(randomPage), computeYear(randomPage)),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n\n          $(\".loading-bar\").css(\"width\", `${(problems.length / numProblems) * 100}%`);\n        } else if (problemText.includes(\"Redirect to:\")) {\n          console.log(\"Redirect problem, going there instead...\");\n\n          let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n          let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n          console.log(redirPage);\n          redirList.push(redirPage);\n\n          $(\".loading-bar\").css(\"width\", `${(problems.length / numProblems) * 100}%`);\n        } else {\n          console.log(\"Invalid problem, skipping...\");\n\n          let blockedProblem = true;\n\n          while (blockedProblem) {\n            pageIndex = Math.floor(Math.random() * pages.length);\n            randomPage = pages[pageIndex];\n\n            blockedProblem = skipProblems.includes(randomPage);\n            if (blockedProblem) pages.splice(pageIndex, 1);\n          }\n          console.log(randomPage);\n          pages.splice(pageIndex, 1);\n\n          params = `action=parse&page=${randomPage}&format=json`;\n          response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n          json = await response.json();\n\n          problemText = latexer(json.parse.text[\"*\"]);\n          problemProblem = getProblem(problemText);\n          problemSolutions = getSolutions(problemText);\n\n          problems.push({\n            title: randomPage,\n            difficulty: computeDifficulty(computeTest(randomPage), computeNumber(randomPage), computeYear(randomPage)),\n            problem: problemProblem,\n            solutions: problemSolutions,\n          });\n        }\n      }\n\n      if (redirList[0]) {\n        paramsList = redirList.map((redirPage) => `action=parse&page=${redirPage}&format=json`);\n        console.log(paramsList);\n        responseList = await Promise.all(paramsList.map((params) => fetch(`${apiEndpoint}?${params}&origin=*`)));\n        console.log(responseList);\n        jsonList = await Promise.all(responseList.map((response) => response.json()));\n        console.log(jsonList);\n\n        for (let [index, currentProblem] of redirList.entries()) {\n          let problemText = latexer(jsonList[index].parse.text[\"*\"]);\n          let problemProblem = getProblem(problemText);\n          let problemSolutions = getSolutions(problemText);\n\n          if (redirIndex[index])\n            problems.splice(redirIndex[index], 0, {\n              title: currentProblem,\n              difficulty: computeDifficulty(\n                computeTest(currentProblem),\n                computeNumber(currentProblem),\n                computeYear(currentProblem)\n              ),\n              problem: problemProblem,\n              solutions: problemSolutions,\n            });\n          else\n            problems.push({\n              title: currentProblem,\n              difficulty: computeDifficulty(\n                computeTest(currentProblem),\n                computeNumber(currentProblem),\n                computeYear(currentProblem)\n              ),\n              problem: problemProblem,\n              solutions: problemSolutions,\n            });\n        }\n      }\n\n      if (clickedTimes === clickedTimesThen) {\n        if ($(\"#input-sort\").prop(\"checked\")) problems.sort((a, b) => a.difficulty - b.difficulty);\n\n        addHistoryBatch(\n          problems.map((e) => e.title),\n          sourceCleanup(problems[0].problem).substring(0, 140),\n          $(\"#input-name\").val()\n        );\n\n        console.log(problems);\n        addProblems(problems, true);\n      }\n    }\n\n    clickedTimes++;\n    let clickedTimesThen = clickedTimes;\n    clearProblem();\n\n    addBatch();\n\n    let inputNumber = $(\"#input-number\");\n    let inputProblems = $(\"#input-problems\");\n    let inputSkip = $(\"#input-skip\");\n\n    let pages = await getPages();\n    let problems = [];\n    console.log(`${pages.length} total problems retrieved.`);\n    if (!pages.length) {\n      $(\".article-text\").before(\n        `<p class=\"error\">\n          No problems could be found meeting those requirements.\n        </p>`\n      );\n      $(\".article-text\").remove();\n      $(\"#batch-header\").html(\"Error\");\n      $(\"#solutions-section\").remove();\n    } else {\n      await makeBatch();\n    }\n\n    let name = $(\"#input-name\").val();\n    history.pushState(\n      { problems: problems.map((e) => underscores(e.title)).join(\"|\") },\n      name + \" - Trivial Math Practice\",\n      \"?problems=\" + problems.map((e) => underscores(e.title)).join(\"|\")\n    );\n    searchParams = new URLSearchParams(location.search);\n    lastParam = searchParams.get(\"problems\");\n\n    if (clickedTimes === clickedTimesThen) {\n      $(\".loading-notice\").remove();\n      katexFallback();\n      replaceProblems(problems);\n      customText();\n      changeName();\n      fixLinks();\n      collapseSolutions();\n      directLinks();\n      displaySettings();\n      hideLinks();\n      breakSets();\n      addBatchAnswers(problems.map((e) => e.title));\n    }\n  });\n\n  $(\".page-container\").on(\"click\", \"#search-button\", async () => {\n    async function addResults(originalSearch, search, searchResults, pageExists) {\n      let resultsNum = searchResults.length;\n      let loadedTimes = 0;\n\n      $(\".results-notice\").html(`${resultsNum} results found`);\n      if (pageExists)\n        $(\".results-notice\").append(\n          ` | <a href=\"https://artofproblemsolving.com/wiki/index.php/${encodeURIComponent(\n            underscores(search)\n          )}\">${capitalize(titleCleanup(encodeURIComponent(originalSearch)))}</a> exists on the wiki`\n        );\n\n      for (let i = 0; i < resultsNum && i < 10; i++) addResult();\n      loadedTimes++;\n      if (searchResults.length)\n        $(\".results-container\").after(`<button class=\"text-button\" id=\"load-results\">Load more…</button>`);\n\n      $(\"#load-results\").click(() => {\n        for (let i = 0; i < resultsNum - loadedTimes * 10 && i < 10; i++) addResult();\n        loadedTimes++;\n        if (!searchResults.length) $(\"#load-results\").remove();\n        fixLinks();\n        directLinks();\n      });\n    }\n\n    const addResult = () => {\n      $(\".results-container\").append(`<div class=\"result-item\">\n          <h2 class=\"result-title\">\n            <a class=\"result-link\" href=\"${searchResults[0].url}\">\n              ${searchResults[0].title}\n            </a>\n          </h2>\n          <p class=\"result-snippet\">${searchResults[0].snippet}</p>\n        </div>`);\n      searchResults.shift();\n    };\n\n    const enterResult = (page) => {\n      if (\n        page.snippet.indexOf(\"#REDIRECT\") + page.snippet.indexOf(\"#redirect\") + page.title.indexOf(\"\\ufffd\") === -3 &&\n        (validProblem(page.title) || !$(\"#input-problemsonly\").prop(\"checked\"))\n      ) {\n        searchResults.push({\n          url: `/wiki/index.php/${encodeURIComponent(underscores(page.title))}`,\n          title: titleCleanup(page.title),\n          snippet: page.snippet,\n        });\n      }\n    };\n\n    clickedTimes++;\n    let clickedTimesThen = clickedTimes;\n    clearProblem();\n\n    let searchResults = [];\n    let pageExists = false;\n    let originalSearch = $(\"#input-search\").val();\n    let search = sanitize(originalSearch)\n      .replace(/&quot;/g, `\"`)\n      .replace(/’/g, \"'\")\n      .replace(\"#\", \"Problems/Problem \");\n    search = search.charAt(0).toUpperCase() + search.slice(1);\n\n    if (!search) {\n      $(\".notes\").before(\n        `<div class=\"problem-section\">\n          <h2 class=\"section-header\" id=\"article-header\">Error</h2>\n          <p class=\"error\">\n            No search terms were entered.\n          </p>\n        </div>`\n      );\n    } else {\n      let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n\n      let params = `action=parse&page=${encodeURIComponent(underscores(search))}&format=json`;\n      let response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n      let json = await response.json();\n      if (json?.parse) pageExists = true;\n\n      params =\n        `action=query&list=search&srwhat=text&srsearch=${search}` +\n        `&srlimit=max&srqiprofile=wsum_inclinks_pv&format=json`;\n      response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n      json = await response.json();\n\n      if (clickedTimes === clickedTimesThen) for (let page of json.query.search) enterResult(page);\n\n      while (json?.continue) {\n        let paramsContinue = params + `&sroffset=${json.continue.sroffset}`;\n        response = await fetch(`${apiEndpoint}?${paramsContinue}&origin=*`);\n        json = await response.json();\n\n        for (let page of json.query.search) enterResult(page);\n      }\n      console.log(searchResults);\n\n      if (clickedTimes === clickedTimesThen) {\n        addSearch();\n        await addResults(originalSearch, search, searchResults, pageExists);\n\n        document.title = `Search results for ${originalSearch}` + \" - Trivial Math Practice\";\n        fixLinks();\n        directLinks();\n      }\n    }\n  });\n\n  $(\".page-container\").on(\"click\", \"#theorem-button\", async () => {\n    if (!theoremPages[0]) {\n      console.log(\"Loading theorems...\");\n      let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n      let params = `action=query&list=categorymembers&cmtitle=Category:Theorems` + `&cmlimit=max&format=json`;\n\n      let response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n      let json = await response.json();\n\n      for (let page of json.query.categorymembers) theoremPages.push(page.title);\n    }\n    theoremPages = theoremPages.filter((e) => e !== \"H\\ufffdlder's Inequality\" && e !== \"Theorems\");\n\n    let randomTheorem = theoremPages[Math.floor(Math.random() * theoremPages.length)];\n    console.log(randomTheorem);\n    await addArticle(randomTheorem, true);\n  });\n\n  $(\".page-container\").on(\"click\", \"#history-button\", async () => {\n    async function addItems(history) {\n      let resultsNum = history.length;\n      let loadedTimes = 0;\n      for (let i = 0; i < resultsNum && i < 10; i++) addItem();\n      loadedTimes++;\n      if (history.length)\n        $(\".results-container\").after(`<button class=\"text-button\" id=\"load-results\">Load more…</button>`);\n\n      $(\"#load-results\").click(() => {\n        for (let i = 0; i < resultsNum - loadedTimes * 10 && i < 10; i++) addItem();\n        loadedTimes++;\n        if (!history.length) $(\"#load-results\").remove();\n        fixLinks();\n        directLinks();\n      });\n    }\n\n    const addItem = () => {\n      $(\".results-container\").append(`<div class=\"result-item\">\n          <h2 class=\"result-title\">\n            <a class=\"result-link\" href=\"${history[0].url.replace(\"https://artofproblemsolving.com\", \"\")}\">\n              ${history[0].title}\n            </a>\n          </h2>\n          <p class=\"result-snippet\">${history[0].snippet}...</p>\n        </div>`);\n      history.shift();\n    };\n\n    clearAll();\n    activeButton(\"history-button\");\n\n    $(\"#main-button-container\").after(`\n      ${notes}`);\n    collapseText();\n\n    let history = JSON.parse(localStorage.getItem(\"pageHistory\"));\n\n    if (!history) {\n      $(\".notes\").before(\n        `<div class=\"results-container\">\n        <div class=\"results-notice\">No history yet…</div>\n      </div>`\n      );\n    } else {\n      console.log(history);\n\n      addHistoryContainer();\n      await addItems(history);\n\n      document.title = \"View history - Trivial Math Practice\";\n      fixLinks();\n      directLinks();\n      $(\"#clear-history\").click(() => {\n        localStorage.removeItem(\"pageHistory\");\n\n        $(\".results-container\").remove();\n        $(\"#load-results\").remove();\n        $(\".notes\").before(\n          `<div class=\"results-container\">\n            <div class=\"results-notice\">No history yet…</div>\n          </div>`\n        );\n      });\n    }\n  });\n\n  $(\".page-container\").on(\"click\", \"#stats-button\", async () => {\n    clearAll();\n    activeButton(\"stats-button\");\n\n    $(\"#main-button-container\").after(`\n      ${notes}`);\n    collapseText();\n    $(\".notes\").before(\n      `<div class=\"problem-section\" id=\"about-section\">\n          <h2 class=\"section-header\" id=\"about-header\">Your Statistics</h2>\n          <div class=\"article-text\" id=\"about-text\">\n              <div id=\"stats-chart\"></div>\n            <p class=\"list-head\">\n              Total problems generated: <span id=\"num-problems\"></span>\n            </p>\n            <ul class=\"list-indent\">\n              <li class=\"list list-answered\">\n                Total answered: <span id=\"num-answered\"></span>\n              <ul class=\"list-inner\">\n              <li class=\"list-minor list-correct\">\n                Total correct on first try:\n                <span id=\"num-correct\"></span>\n              </li>\n              <li class=\"list-minor list-retry\">\n                Total correct on retry:\n                <span id=\"num-retry\"></span>\n              </li>\n              <li class=\"list-minor list-wrong\">\n                Total given up on:\n                <span id=\"num-wrong\"></span>\n              </li>\n              </ul>\n              </li>\n              <li class=\"list list-today\">\n                Answered today:\n                <span id=\"num-today\"></span>\n              </li>\n              <li class=\"list list-streak\">\n                Longest streak:\n                <span id=\"num-streak\"></span>\n              </li>\n            </ul>\n            <p class=\"list-head\">\n              Total problem sets generated: <span id=\"num-sets\"></span>\n            </p>\n            <p class=\"list-head\">\n              Total articles viewed: <span id=\"num-articles\"></span>\n            </p>\n            <button class=\"text-button\" id=\"clear-button\">\n              <span class=\"feedback-icon\">✗</span> Clear stats forever\n            </button>\n            <div class=\"stats-notes\">\n              <p>\n                Per-user stats started being recorded from 17 July 2022 — if you\n                used Trivial for a while before then, add somewhere between a\n                few dozen and a few thousand to your numbers :)\n              </p>\n              <p class=\"brag\">\n                Over 250,000 problems and problem sets have been generated using\n                Trivial!\n              </p>\n            </div>\n          </div>\n        </div>`\n    );\n\n    function refreshStats() {\n      let numProblems = 0 + JSON.parse(localStorage.getItem(\"numProblems\"));\n      let numAnswered = 0 + JSON.parse(localStorage.getItem(\"numAnswered\"));\n      let numCorrect = 0 + JSON.parse(localStorage.getItem(\"numCorrect\"));\n      let numRetry = 0 + JSON.parse(localStorage.getItem(\"numRetry\"));\n      let numToday = 0 + JSON.parse(localStorage.getItem(\"numToday\"));\n      let numStreak = 0 + JSON.parse(localStorage.getItem(\"numStreak\"));\n      let numSets = 0 + JSON.parse(localStorage.getItem(\"numSets\"));\n      let numArticles = 0 + JSON.parse(localStorage.getItem(\"numArticles\"));\n      let numWrong = numAnswered - numCorrect - numRetry;\n\n      $(\"#num-problems\").text(numProblems.toLocaleString(\"en-US\"));\n      $(\"#num-answered\").text(numAnswered.toLocaleString(\"en-US\"));\n      $(\"#num-correct\").text(numCorrect.toLocaleString(\"en-US\"));\n      $(\"#num-retry\").text(numRetry.toLocaleString(\"en-US\"));\n      $(\"#num-wrong\").text(numWrong.toLocaleString(\"en-US\"));\n      $(\"#num-today\").text(numToday.toLocaleString(\"en-US\"));\n      $(\"#num-streak\").text(numStreak.toLocaleString(\"en-US\"));\n      $(\"#num-sets\").text(numSets.toLocaleString(\"en-US\"));\n      $(\"#num-articles\").text(numArticles.toLocaleString(\"en-US\"));\n\n      const options = {\n        $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n        description: \"A simple pie chart with labels.\",\n        data: {\n          values: [\n            {\n              Answers: \"Correct\",\n              value: numCorrect,\n              text: numCorrect ? numCorrect + \"✓\" : \"\",\n              sortOrder: 1,\n            },\n            {\n              Answers: \"Retry\",\n              value: numRetry,\n              text: numRetry ? numRetry + \"↻\" : \"\",\n              sortOrder: 2,\n            },\n            {\n              Answers: \"Incorrect\",\n              value: numWrong,\n              text: numWrong ? numWrong + \"✗\" : \"\",\n              sortOrder: 3,\n            },\n          ],\n        },\n        encoding: {\n          theta: {\n            field: \"value\",\n            type: \"quantitative\",\n            stack: true,\n          },\n          color: {\n            field: \"Answers\",\n            type: \"nominal\",\n            legend: null,\n            scale: {\n              domain: [\"Correct\", \"Retry\", \"Incorrect\"],\n              range: [\"var(--correct-color)\", \"var(--retry-color)\", \"var(--wrong-color)\"],\n            },\n            sort: { field: \"sortOrder\" },\n          },\n          order: {\n            field: \"sortOrder\",\n            type: \"ordinal\",\n          },\n        },\n        layer: [\n          {\n            mark: {\n              type: \"arc\",\n              innerRadius: 50,\n              outerRadius: 80,\n            },\n          },\n          {\n            mark: {\n              type: \"text\",\n              radius: 100,\n              fontSize: 15,\n              fontWeight: \"bold\",\n            },\n            encoding: {\n              text: {\n                field: \"text\",\n                type: \"nominal\",\n                sort: { field: \"sortOrder\" },\n              },\n            },\n          },\n          {\n            mark: {\n              type: \"text\",\n              fill: \"var(--minor-color)\",\n              align: \"center\",\n              baseline: \"middle\",\n              dy: 11,\n              fontSize: 16,\n            },\n            encoding: {\n              text: { value: \"correct\" },\n            },\n          },\n          {\n            mark: {\n              type: \"text\",\n              fill: \"var(--minor-color)\",\n              align: \"center\",\n              baseline: \"middle\",\n              dx: 1,\n              dy: -7,\n              font: \"'Latin Modern Sans Demi-Condensed', sans-serif\",\n              fontSize: 20,\n            },\n            encoding: {\n              text: {\n                value: (((numCorrect + numRetry) / numAnswered) * 100).toFixed(1) + \"%\",\n              },\n            },\n          },\n        ],\n        background: null,\n        config: {\n          font: \"'Latin Modern Sans', 'Inter', sans-serif\",\n        },\n      };\n\n      if (numAnswered > 0)\n        vegaEmbed(\"#stats-chart\", options, {\n          actions: false,\n          renderer: \"svg\",\n        });\n    }\n\n    $(\"#clear-button\").click(() => {\n      localStorage.setItem(\"numProblems\", 0);\n      localStorage.setItem(\"numAnswered\", 0);\n      localStorage.setItem(\"numCorrect\", 0);\n      localStorage.setItem(\"numRetry\", 0);\n      localStorage.setItem(\"numSets\", 0);\n      localStorage.setItem(\"numArticles\", 0);\n      refreshStats();\n    });\n\n    refreshStats();\n\n    document.title = \"Statistics - Trivial Math Practice\";\n    fixLinks();\n    directLinks();\n  });\n\n  $(\".page-container\").on(\"click\", \"#difficulty-link\", () => {\n    $(\"#difficulty-info\").toggleClass(\"difficulty-info-hidden\");\n    renderChart();\n  });\n\n  // Replace problems\n  async function replaceProblems(problems) {\n    console.log(\"replaceProblems\", problems);\n    $(\".replace-problem\").click(async function () {\n      async function replace() {\n        let pageIndex;\n        let randomPage;\n        let newProblem;\n        let giveUp = false;\n\n        let apiEndpoint = \"https://artofproblemsolving.com/wiki/api.php\";\n        let params;\n        let response;\n        let json;\n\n        while (!newProblem && !giveUp) {\n          pageIndex = Math.floor(Math.random() * pages.length);\n          randomPage = pages[pageIndex];\n          console.log(randomPage);\n\n          params = `action=parse&page=${randomPage}&format=json`;\n          response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n          json = await response.json();\n\n          let problemText = latexer(json.parse.text[\"*\"]);\n          let problemProblem = getProblem(problemText);\n          let problemSolutions = getSolutions(problemText);\n\n          if (problemProblem && problemSolutions) {\n            newProblem = {\n              title: randomPage,\n              difficulty: computeDifficulty(\n                computeTest(randomPage),\n                computeNumber(randomPage),\n                computeYear(randomPage)\n              ),\n              problem: problemProblem,\n              solutions: problemSolutions,\n            };\n\n            problems.push(newProblem);\n            pages.splice(pageIndex, 1);\n          } else if (problemText.includes(\"Redirect to:\")) {\n            console.log(\"Redirect problem, going there instead...\");\n\n            let redirHref = $($.parseHTML(problemText)).find(\".redirectText a\").attr(\"href\");\n            let redirPage = redirHref.replace(\"/wiki/index.php/\", \"\").replace(/_/g, \" \");\n            console.log(redirPage);\n\n            params = `action=parse&page=${redirPage}&format=json`;\n            response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n            json = await response.json();\n\n            problemText = latexer(json.parse.text[\"*\"]);\n            problemProblem = getProblem(problemText);\n            problemSolutions = getSolutions(problemText);\n\n            newProblem = {\n              title: randomPage,\n              difficulty: computeDifficulty(\n                computeTest(randomPage),\n                computeNumber(randomPage),\n                computeYear(randomPage)\n              ),\n              problem: problemProblem,\n              solutions: problemSolutions,\n            };\n\n            problems.push(newProblem);\n            pages.splice(pageIndex, 1);\n          } else {\n            console.log(\"Invalid problem, skipping...\");\n            pages.splice(pageIndex, 1);\n            if (!pages.length) giveUp = true;\n          }\n          if (newProblem) {\n            $(`#batch-text .article-problem:nth-child(${replacedIndex})`).replaceWith(`<div class=\"article-problem\"\n                index=\"${replacedIndex}\" difficulty=\"${newProblem.difficulty}\">\n                <h2 class=\"problem-heading\">Problem ${replacedIndex}\n                  <span class=\"source-link\">\n                    (<a class=\"source-link-a\"\n                      href=\"?page=${underscores(newProblem.title)}\">${titleCleanup(newProblem.title)}</a>)\n                  </span>${replaceButton}\n                </h2>${newProblem.problem}\n              </div>`);\n\n            $(`#solutions-text .article-problem:nth-child(${replacedIndex})`).replaceWith(`<div class=\"article-problem\" \n                index=\"${replacedIndex}\" difficulty=\"${newProblem.difficulty}\">\n                <h2 class=\"problem-heading\">\n                  Problem ${replacedIndex}\n                  <span class=\"source-link\">\n                    (<a class=\"source-link-a\"\n                      href=\"?page=${underscores(newProblem.title)}\">${titleCleanup(newProblem.title)}</a>)\n                  </span>\n                </h2>${newProblem.problem}\n                <div class=\"solutions-divider\">Solution</div>\n                ${newProblem.solutions}\n              </div>`);\n\n            let problemsList = $(\"#copy-problems\").attr(\"data-clipboard-text\").split(\", \");\n            let oldProblemsList = problemsList;\n            let origOldProblemsList = oldProblemsList.map((e) =>\n              e.replace(/_/g, \" \").replace(\"#\", \"Problems/Problem \")\n            );\n            problemsList[replacedIndex - 1] = titleCleanup(newProblem.title);\n            $(\"#copy-problems\").attr(\"data-clipboard-text\", problemsList.join(\", \"));\n            let origProblemsList = problemsList.map((e) => e.replace(/_/g, \" \").replace(\"#\", \"Problems/Problem \"));\n\n            let name = $(\"#input-name\").val();\n            let pageHistory = JSON.parse(localStorage.getItem(\"pageHistory\"));\n            let historyIndex = pageHistory.findIndex(\n              (e) => e.url === `?problems=${underscores(origOldProblemsList.join(\"|\"))}`\n            );\n\n            pageHistory[historyIndex].url = `?problems=${underscores(origProblemsList.join(\"|\"))}`;\n            pageHistory[historyIndex].title =\n              name ||\n              problemsList\n                .map((e) => titleCleanup(e))\n                .join(\", \")\n                .substring(0, 40) + \"...\";\n            localStorage.setItem(\"pageHistory\", JSON.stringify(pageHistory));\n\n            history.replaceState(\n              { problems: underscores(origProblemsList.join(\"|\")) },\n              name + \" - Trivial Math Practice\",\n              \"?problems=\" + underscores(origProblemsList.join(\"|\"))\n            );\n            searchParams = new URLSearchParams(location.search);\n            lastParam = searchParams.get(\"problems\");\n\n            katexFallback();\n            $(\".replace-problem\").off(\"click\");\n            replaceProblems(problems);\n            fixLinks();\n            directLinks();\n            hideLinks();\n            breakSets();\n\n            let answersTitle = `${newProblem.title?.split(\" Problems/Problem\")[0]} Answer Key`;\n            params = `action=parse&page=${answersTitle}&format=json`;\n            response = await fetch(`${apiEndpoint}?${params}&origin=*`);\n            json = await response.json();\n\n            $(`.answer-box[index=${replacedIndex}]`).remove();\n\n            let answerText = json.parse?.text[\"*\"];\n            let problemNum = computeNumber(newProblem.title);\n            let answer = $($.parseHTML(answerText))\n              ?.find(\"ol li\")\n              ?.eq(problemNum - 1)\n              ?.text();\n            console.log(answer);\n            if (answer) {\n              if (!$(\"#batchans-section\").length)\n                $(\"#solutions-section\").before(\n                  `<div class=\"problem-section\" id=\"batchans-section\">\n                    <h2 class=\"section-header collapse-header\" id=\"batchans-header\">\n                    Answer Check\n                      <span class=\"header-minor\">(opt.)</span></h2>\n                    <div class=\"answer-list\"></div>\n                    <div class=\"options-input batchans-options\">\n                      <div class=\"input-container checkbox-container\n                      input-flexone-full\">\n                        <div class=\"checkbox-wrap\">\n                          <div class=\"radio-block\">\n                            <input type=\"radio\" name=\"input-feedback\" id=\"score-only\"\n                            value=\"score-only\">\n                            <label class=\"checkbox-label\">Only show score</label>\n                          </div>\n                          <div class=\"radio-block\">\n                            <input type=\"radio\" name=\"input-feedback\" id=\"check-only\"\n                            value=\"check-only\">\n                            <label class=\"checkbox-label\">Only mark questions</label>\n                          </div>\n                          <div class=\"radio-block\">\n                            <input type=\"radio\" name=\"input-feedback\" id=\"show-ans\"\n                            value=\"show-ans\" checked>\n                            <label class=\"checkbox-label\">Show correct answers</label>\n                          </div>\n                          <div class=\"radio-block\">\n                            <input type=\"checkbox\" class=\"input-check\" id=\"input-amc\"/>\n                            <label class=\"checkbox-label\">Use AMC 10/12 scoring</label>\n                          </div>\n                        </div>\n                      </div>\n                      <button class=\"input-button input-button-flexone-full\"\n                      id=\"batchans-button\">\n                        Check Answers\n                      </button>\n                    </div>\n                  </div>`\n                );\n\n              $(\"#batchans-header\").off(\"click\");\n              $(\"#batchans-header\").click(() => {\n                $(\"#batchans-section\").toggleClass(\"section-collapsed\");\n              });\n\n              if ($(`.answer-box[index=${replacedIndex}]`).length) {\n                $(`.answer-box[index=${replacedIndex}]`).replaceWith(`<div class=\"answer-box\" index=\"${replacedIndex}\"\n                    pagename=\"${newProblem.title}\" answer=\"${answer}\">\n                    <span class=\"answer-num\">${replacedIndex}</span>\n                    <input class=\"input-field input-batchans\" type=\"text\"\n                    placeholder=\"Enter answer\"/>\n                  </div>`);\n              } else {\n                let answerIndex = replacedIndex;\n                while (answerIndex && !$(`.answer-box[index=${answerIndex}]`).length) answerIndex--;\n\n                if (answerIndex !== 0) {\n                  $(`.answer-box[index=${answerIndex}]`).after(`<div class=\"answer-box\" index=\"${replacedIndex}\"\n                    pagename=\"${newProblem.title}\" answer=\"${answer}\">\n                    <span class=\"answer-num\">${replacedIndex}</span>\n                    <input class=\"input-field input-batchans\" type=\"text\"\n                    placeholder=\"Enter answer\"/>\n                  </div>`);\n                } else {\n                  $(\".answer-list\").prepend(`<div class=\"answer-box\" index=\"${replacedIndex}\"\n                    pagename=\"${newProblem.title}\" answer=\"${answer}\">\n                    <span class=\"answer-num\">${replacedIndex}</span>\n                    <input class=\"input-field input-batchans\" type=\"text\"\n                    placeholder=\"Enter answer\"/>\n                  </div>`);\n                }\n              }\n            }\n          }\n        }\n      }\n      let replacedProblem = $(this).closest(\".article-problem\");\n      let replacedIndex = replacedProblem.attr(\"index\");\n      let replacedDifficulty = replacedProblem.attr(\"difficulty\");\n\n      let pages = await getPages();\n      pages = pages.filter((problem) => !problems.map((e) => e.title).includes(problem));\n      if ($(\"#input-sort\").prop(\"checked\"))\n        pages = pages.filter(\n          (problem) =>\n            computeDifficulty(computeTest(problem), computeNumber(problem), computeYear(problem)) == replacedDifficulty\n        );\n\n      console.log(`${pages.length} total problems retrieved.`);\n      if (!pages.length) $(this).replaceWith(`<span class=\"replace-notice\">No replacements found</span>`);\n      else {\n        await replace();\n        console.log(problems);\n        if (!pages.length) $(this).replaceWith(`<span class=\"replace-notice\">No replacements found</span>`);\n      }\n    });\n  }\n\n  // Clear things\n  function clearProblem() {\n    console.log(\"clearProblem\");\n    $(\".problem-section\").remove();\n    $(\".display-settings\").remove();\n    $(\".results-container\").remove();\n    $(\"#load-results\").remove();\n  }\n\n  function clearOptions() {\n    console.log(\"clearOptions\");\n\n    clickedTimes++;\n    document.title = \"Trivial Math Practice\";\n    history.pushState({}, \"Trivial Math Practice\", location.href.split(\"?page=\")[0].split(\"?problems=\")[0]);\n    lastParam = \"\";\n    $(\"#difficulty-info\").remove();\n    $(\".options-container\").remove();\n    $(\".options-input\").remove();\n    $(\"#options-header\").remove();\n    $(\".error\").remove();\n    $(\".problem-section\").remove();\n    $(\".display-settings\").remove();\n    $(\".results-container\").remove();\n    $(\"#load-results\").remove();\n    $(\".notes\").remove();\n  }\n\n  function clearOptionsWithoutHistory() {\n    console.log(\"clearOptionsWithoutHistory\");\n\n    clickedTimes++;\n    $(\"#difficulty-info\").remove();\n    $(\".options-container\").remove();\n    $(\".options-input\").remove();\n    $(\"#options-header\").remove();\n    $(\".error\").remove();\n    $(\".problem-section\").remove();\n    $(\".display-settings\").remove();\n    $(\".results-container\").remove();\n    $(\"#load-results\").remove();\n    $(\".notes\").remove();\n  }\n\n  function clearAll() {\n    console.log(\"clearAll\");\n\n    clickedTimes++;\n    document.title = \"Trivial Math Practice\";\n    history.pushState({}, \"Trivial Math Practice\", location.href.split(\"?page=\")[0].split(\"?problems=\")[0]);\n    lastParam = \"\";\n    $(\"#secondary-button-container\").remove();\n    $(\"#difficulty-info\").remove();\n    $(\".options-container\").remove();\n    $(\".options-input\").remove();\n    $(\"#options-header\").remove();\n    $(\".error\").remove();\n    $(\".problem-section\").remove();\n    $(\".display-settings\").remove();\n    $(\".results-container\").remove();\n    $(\"#load-results\").remove();\n    $(\".notes\").remove();\n  }\n\n  // Active buttons\n  function activeButton(buttonName) {\n    $(\".button\").removeClass(\"button-active\");\n    $(`#${buttonName}`).addClass(\"button-active\");\n  }\n\n  function activeSecondaryButton(buttonName) {\n    $(\".secondary-button\").removeClass(\"secondary-button-active\");\n    $(`#${buttonName}`).addClass(\"secondary-button-active\");\n  }\n\n  // Formatting\n  function collapseText() {\n    console.log(\"collapseText\");\n    $(\"#notes-header\").click(() => {\n      $(\".notes\").toggleClass(\"text-collapsed\");\n    });\n    $(\"#options-header\").click(() => {\n      $(\".options-container\").toggleClass(\"text-collapsed\");\n    });\n  }\n\n  function customText() {\n    console.log(\"customText\");\n    if (JSON.parse(localStorage.getItem(\"serifFont\"))) $(\".article-text\").addClass(\"serif-text\");\n\n    if (JSON.parse(localStorage.getItem(\"justifyText\"))) $(\".article-text\").addClass(\"justify-text\");\n  }\n\n  function changeName() {\n    console.log(\"changeName\");\n    let name = $(\"#input-name\").val();\n    if (name) {\n      $(\"#batch-header\").html(sanitize(name));\n      document.title = sanitize(name) + \" - Trivial Math Practice\";\n    } else {\n      document.title = \"Problem Set - Trivial Math Practice\";\n    }\n  }\n\n  function nameLive() {\n    console.log(\"nameLive\");\n    $(\"#input-name\").change(() => {\n      changeName();\n    });\n  }\n\n  function katexFallback() {\n    console.log(\"katexFallback\");\n    $(\".katex-error, .text[style='color:#cc0000;']\").each(function () {\n      $(this).closest(\".katex-container\").addClass(\"katex-broken\");\n      $(this).closest(\".katex-container\").prev(\".fallback-container\").addClass(\"fallback-live\");\n    });\n  }\n\n  function fixLinks() {\n    console.log(\"fixLinks\");\n    $(\"a\").each(function () {\n      let href = $(this).attr(\"href\")?.split(\"#\")[0];\n      if (href && /^\\/wiki\\/index\\.php\\//.test(href)) {\n        $(this).attr({\n          href: href.replace(\"/wiki/index.php/\", \"?page=\"),\n          title: \"\",\n        });\n      } else if (href && /^\\/wiki\\/index\\.php/.test(href)) {\n        $(this).attr({\n          href: href.replace(\"/wiki/index.php\", \"https://artofproblemsolving.com/wiki/index.php\"),\n          title: \"\",\n        });\n      }\n    });\n\n    $(\"a.image\").each(function () {\n      $(this).removeAttr(\"href\");\n    });\n  }\n\n  async function directLinks() {\n    console.log(\"directLinks\");\n\n    $(\"a:not(#aops-wiki-link):not(.aops-link):not(.new)\").off(\"click\");\n    $(\"a:not(#aops-wiki-link):not(.aops-link):not(.new)\").click(async function (event) {\n      let href = $(this).attr(\"href\");\n      if (href && (href.includes(\"artofproblemsolving.com/wiki/\") || href.includes(\"?page=\"))) {\n        event.preventDefault();\n        let pagename = decodeURIComponent(\n          href\n            .replace(/^https?:\\/\\/(www\\.)?artofproblemsolving\\.com\\/wiki\\/index\\.php\\//, \"\")\n            .replace(/^\\?page=/, \"\")\n            .replace(/_/g, \" \")\n            .replace(/%/g, \"%25\")\n        ).replace(/%2F/g, \"/\");\n        clearProblem();\n        console.log(pagename);\n        if (validProblem(pagename)) await addProblem(pagename, true);\n        else await addArticle(pagename, true);\n      }\n    });\n  }\n\n  function hideLinks() {\n    console.log(\"hideLinks\");\n\n    if ($(\"#input-hide\").prop(\"checked\")) $(\"#batch-text .source-link\").addClass(\"source-link-hidden\");\n    else $(\"#batch-text .source-link\").removeClass(\"source-link-hidden\");\n  }\n\n  function hideToggle() {\n    console.log(\"hideToggle\");\n    $(\"#input-hide\").change(() => {\n      $(\"#batch-text .source-link\").toggleClass(\"source-link-hidden\");\n    });\n  }\n\n  function collapseSolutions() {\n    console.log(\"collapseSolutions\");\n    $(\"#solutions-header\").off(\"click\");\n    $(\"#solutions-header\").click(() => {\n      $(\"#solutions-section\").toggleClass(\"section-collapsed\");\n      $(\"#input-answer\").prop(\"disabled\", true);\n      if (\n        !JSON.parse(localStorage.getItem(\"countersHidden\")) &&\n        $(\".answer-check\").length &&\n        !$(\".correct-feedback\").length &&\n        !progressUpdated\n      ) {\n        $(\"main\").removeClass(\"hide-counters\");\n        $(\".progress-hidden\").removeClass(\"progress-hidden\");\n        $(\".progress-nobottom\").removeClass(\"progress-nobottom\");\n        progressUpdated = true;\n        if (answerTries > 0) {\n          $(\".streak-bar\").removeClass(\"bar-hidden\");\n          $(\".question-bar.wrong-questions\").removeClass(\"bar-hidden\");\n          $(\".question-bar.wrong-questions\").css(\n            \"flex-grow\",\n            parseInt($(\".question-bar.wrong-questions\").css(\"flex-grow\")) + 1\n          );\n          $(\"#wrong-num\").text(parseInt($(\".question-bar.wrong-questions\").css(\"flex-grow\")));\n        } else {\n          streakCount = 0;\n          $(\"#streak-num\").text(streakCount);\n          $(\".streak-bar\").removeClass(\"bar-hidden\");\n          $(\".question-bar.blank-questions\").removeClass(\"bar-hidden\");\n          $(\".question-bar.blank-questions\").css(\n            \"flex-grow\",\n            parseInt($(\".question-bar.blank-questions\").css(\"flex-grow\")) + 1\n          );\n          $(\"#blank-num\").text(parseInt($(\".question-bar.blank-questions\").css(\"flex-grow\")));\n        }\n      }\n    });\n  }\n\n  function displaySettings() {\n    console.log(\"displaySettings\");\n\n    if (JSON.parse(localStorage.getItem(\"serifFont\"))) {\n      $(\"#serif-toggle\").text(\"Serif font\");\n    }\n    if (JSON.parse(localStorage.getItem(\"justifyText\"))) {\n      $(\"#justify-toggle\").text(\"Justified text\");\n    }\n    if (JSON.parse(localStorage.getItem(\"countersHidden\"))) {\n      $(\"#counter-toggle\").text(\"Counters off\");\n      $(\"main\").addClass(\"hide-counters\");\n    }\n    if (JSON.parse(localStorage.getItem(\"autogenOff\"))) {\n      $(\"#autogen-toggle\").text(\"Auto-generate off\");\n    }\n    if (printLinks) {\n      $(\".page-container\").addClass(\"links-text\");\n      $(\"#print-toggle\").text(\"Links printed\");\n    }\n\n    $(\"#serif-toggle\").click(() => {\n      settingsClicked += \"1\";\n\n      $(\".article-text\").toggleClass(\"serif-text\");\n      if (!JSON.parse(localStorage.getItem(\"serifFont\"))) {\n        localStorage.setItem(\"serifFont\", true);\n        $(\"#serif-toggle\").text(\"Serif font\");\n      } else {\n        localStorage.setItem(\"serifFont\", false);\n        $(\"#serif-toggle\").text(\"Sans font\");\n      }\n    });\n\n    $(\"#justify-toggle\").click(() => {\n      settingsClicked += \"2\";\n\n      $(\".article-text\").toggleClass(\"justify-text\");\n      if (!JSON.parse(localStorage.getItem(\"justifyText\"))) {\n        localStorage.setItem(\"justifyText\", true);\n        $(\"#justify-toggle\").text(\"Justified text\");\n      } else {\n        localStorage.setItem(\"justifyText\", false);\n        $(\"#justify-toggle\").text(\"Unjustified text\");\n      }\n    });\n\n    $(\"#counter-toggle\").click(() => {\n      settingsClicked += \"3\";\n\n      $(\"main\").toggleClass(\"hide-counters\");\n      if (!JSON.parse(localStorage.getItem(\"countersHidden\"))) {\n        localStorage.setItem(\"countersHidden\", true);\n        $(\"#counter-toggle\").text(\"Counters off\");\n      } else {\n        localStorage.setItem(\"countersHidden\", false);\n        $(\"#counter-toggle\").text(\"Counters on\");\n      }\n    });\n\n    $(\"#autogen-toggle\").click(() => {\n      settingsClicked += \"4\";\n\n      if (!JSON.parse(localStorage.getItem(\"autogenOff\"))) {\n        localStorage.setItem(\"autogenOff\", true);\n        $(\"#autogen-toggle\").text(\"Auto-generate off\");\n      } else {\n        localStorage.setItem(\"autogenOff\", false);\n        $(\"#autogen-toggle\").text(\"Auto-generate on\");\n      }\n    });\n\n    $(\"#print-toggle\").click(() => {\n      settingsClicked += \"5\";\n\n      if (settingsClicked === \"12345\" && !$(\"#fun-toggle\").length) {\n        $(\"#print-toggle\").after(`\n          <span class=\"divider\"> ⋅ </span>\n          <button class=\"text-button setting-button\" id=\"fun-toggle\" tabindex=\"0\">\n            Made you click\n          </button>`);\n        settingsClicked = \"\";\n      }\n\n      $(\"#fun-toggle\").click(function () {\n        $(\".divider\").remove();\n        $(this).remove();\n      });\n\n      $(\".page-container\").toggleClass(\"links-text\");\n      if (printLinks) {\n        printLinks = false;\n        $(\"#print-toggle\").text(\"Links unprinted\");\n      } else {\n        printLinks = true;\n        $(\"#print-toggle\").text(\"Links printed\");\n      }\n    });\n  }\n\n  function breakSets() {\n    console.log(\"breakSets\");\n    let breakNum = $(\"#input-break\").val();\n    if (breakNum) {\n      $(`.article-problem`).css(\"break-after\", \"\");\n      $(`.article-problem:nth-child(${breakNum}n)`).css(\"break-after\", \"page\");\n    } else $(`.article-problem`).css(\"break-after\", \"\");\n  }\n\n  function breakLive() {\n    console.log(\"breakLive\");\n    $(\"#input-break\").change(() => {\n      breakSets();\n    });\n  }\n\n  // Update options\n  function updateYear() {\n    console.log(\"updateYear\");\n\n    $(\"#input-singletest, #input-singlever\").off(\"change\");\n    $(\"#input-singletest\").change(function () {\n      let testName = $(\"#input-singletest\").val();\n      if (testName in validVersions) {\n        $(\"#input-singlever\").data(\"tagify\").setDisabled(false);\n        $(\"#input-singlever\").data(\"tagify\").whitelist = validVersions[testName];\n      } else {\n        $(\"#input-singlever\").data(\"tagify\").removeAllTags();\n        $(\"#input-singlever\").data(\"tagify\").setDisabled(true);\n      }\n    });\n    $(\"#input-singletest, #input-singlever\").change(function () {\n      let yearSelect = $(this).nextAll(\"#input-singleyear\");\n      let numSelect = $(this).nextAll(\"#input-singlenum\");\n      let testVer = $(\"#input-singlever\").val();\n      let testName = $(\"#input-singletest\").val();\n      if (testName + testVer in validYears)\n        yearSelect.attr({\n          min: validYears[testName + testVer].min,\n          max: validYears[testName + testVer].max,\n        });\n      if (testName in validNums)\n        numSelect.attr({\n          min: validNums[testName].min,\n          max: validNums[testName].max,\n        });\n    });\n  }\n\n  // Insert chart\n  function renderChart() {\n    console.log(\"renderChart\");\n\n    const options = {\n      $schema: \"https://vega.github.io/schema/vega-lite/v5.json\",\n\n      description: \"A simple bar chart with ranged data (aka Gantt Chart).\",\n      data: {\n        values: [\n          {\n            Test: \"AMC 8\",\n            \"Start difficulty\": 0.25,\n            \"End difficulty\": 2,\n            Level: \"Introductory\",\n          },\n          {\n            Test: \"AMC 10\",\n            \"Start difficulty\": 1,\n            \"End difficulty\": 4.5,\n            Level: \"Intermediate\",\n          },\n          {\n            Test: \"AMC 12\",\n            \"Start difficulty\": 1.25,\n            \"End difficulty\": 5.5,\n            Level: \"Intermediate\",\n          },\n          {\n            Test: \"AHSME\",\n            \"Start difficulty\": 1,\n            \"End difficulty\": 5.5,\n            Level: \"Intermediate\",\n          },\n          {\n            Test: \"AIME\",\n            \"Start difficulty\": 3,\n            \"End difficulty\": 6.5,\n            Level: \"Intermediate\",\n          },\n          {\n            Test: \"USAJMO\",\n            \"Start difficulty\": 4,\n            \"End difficulty\": 7,\n            Level: \"Olympiad\",\n          },\n          {\n            Test: \"USAMO\",\n            \"Start difficulty\": 4,\n            \"End difficulty\": 8.5,\n            Level: \"Olympiad\",\n          },\n          {\n            Test: \"IMO\",\n            \"Start difficulty\": 4,\n            \"End difficulty\": 9.5,\n            Level: \"Olympiad\",\n          },\n        ],\n      },\n      mark: \"bar\",\n      encoding: {\n        y: {\n          field: \"Test\",\n          type: \"ordinal\",\n          sort: { order: null },\n          axis: { titleFontSize: 14, labelFontSize: 13 },\n        },\n        x: {\n          field: \"Start difficulty\",\n          type: \"quantitative\",\n          axis: {\n            tickMinStep: 1,\n            titleFontSize: 14,\n            labelFontSize: 13,\n            title: \"Difficulty\",\n          },\n        },\n        x2: { field: \"End difficulty\" },\n        color: {\n          type: \"nominal\",\n          field: \"Level\",\n          scale: {\n            domain: [\"Introductory\", \"Intermediate\", \"Olympiad\"],\n            range: [\"#f58518\", \"#4c78a8\", \"#e45756\"],\n          },\n          sort: { order: null },\n          legend: {\n            titleFontSize: 14,\n            labelFontSize: 13,\n          },\n        },\n      },\n\n      width: \"container\",\n      height: 200,\n      background: null,\n      config: {\n        font: \"'Latin Modern Sans', sans-serif\",\n      },\n    };\n\n    vegaEmbed(\"#difficulty-chart\", options, {\n      actions: false,\n      renderer: \"svg\",\n    });\n  }\n\n  // Enter pages into history\n  function addHistory(page, snippet) {\n    console.log(\"addHistory\", page, snippet);\n\n    let history = JSON.parse(localStorage.getItem(\"pageHistory\"));\n    let url = `?page=${underscores(page)}`;\n    let cleanedPage = titleCleanup(page);\n    let sanitizedSnippet = sanitize(snippet);\n\n    if (history)\n      history.unshift({\n        url: url,\n        title: cleanedPage,\n        snippet: sanitizedSnippet,\n      });\n    else\n      history = [\n        {\n          url: url,\n          title: cleanedPage,\n          snippet: sanitizedSnippet,\n        },\n      ];\n    if (history.length > 50) history.pop();\n    history = [...new Map(history.map((item) => [item.title, item])).values()];\n\n    localStorage.setItem(\"pageHistory\", JSON.stringify(history));\n  }\n\n  function addHistoryBatch(problems, snippet, title, testYear, testName) {\n    console.log(\"addHistoryBatch\", problems, snippet, title, testYear, testName);\n\n    let history = JSON.parse(localStorage.getItem(\"pageHistory\"));\n    let url =\n      `?problems=${underscores(problems.join(\"|\"))}` + (testYear ? `&testyear=${testYear}&testname=${testName}` : ``);\n    let cleanedPage =\n      title ||\n      problems\n        .map((e) => titleCleanup(e))\n        .join(\", \")\n        .substring(0, 40) + \"...\";\n    let sanitizedSnippet = sanitize(snippet);\n\n    if (history)\n      history.unshift({\n        url: url,\n        title: cleanedPage,\n        snippet: sanitizedSnippet,\n      });\n    else\n      history = [\n        {\n          url: url,\n          title: cleanedPage,\n          snippet: sanitizedSnippet,\n        },\n      ];\n    if (history.length > 50) history.pop();\n    history = [...new Map(history.map((item) => [item.title, item])).values()];\n\n    localStorage.setItem(\"pageHistory\", JSON.stringify(history));\n  }\n\n  // Show article/batch if query\n  (async () => {\n    if (searchParams.get(\"page\")) {\n      $(\"#main-button-container\").after(`${notes}`);\n      collapseText();\n\n      if (validProblem(lastParam)) await addProblem(lastParam, true);\n      else await addArticle(lastParam, true);\n    } else if (searchParams.get(\"problems\")) {\n      $(\"#main-button-container\").after(`${notes}`);\n      addUrlBatch();\n      collapseText();\n\n      console.log(testInfo);\n      await fillBatch(lastParam, true, testInfo.testYear, testInfo.testName);\n    }\n\n    window.onpopstate = async (event) => {\n      let newPagename = event.state?.page;\n      let newProblems = event.state?.problems;\n      let newTestYear = event.state?.testyear;\n      let newTestName = event.state?.testname;\n      console.log(\"newProblems:\", newProblems);\n\n      if (newPagename && newPagename !== searchParams.get(\"page\")) {\n        if (!$(\".notes\").length) {\n          if (!$(\"#secondary-button-container\").length) $(\"#main-button-container\").after(`${notes}`);\n          else $(\"#secondary-button-container\").after(`${notes}`);\n          collapseText();\n        }\n\n        clearProblem();\n        if (validProblem(newPagename)) await addProblem(newPagename, false);\n        else await addArticle(newPagename, false);\n        lastParam = newPagename;\n      } else if (newProblems && newProblems !== searchParams.get(\"problems\")) {\n        clearOptionsWithoutHistory();\n        $(\"#main-button-container\").after(`${notes}`);\n        collapseText();\n\n        addUrlBatch();\n        await fillBatch(newProblems, false, newTestYear, newTestName);\n        lastParam = newProblems;\n        testInfo = { testYear: newTestYear, testName: newTestName };\n      }\n    };\n  })();\n\n  // Bonus\n  /*\n  $(\".subtitle\").click(() => {\n    subtitleClicked++;\n    let text;\n    switch (subtitleClicked % 7) {\n      case 0:\n        text = \"Studying & Practicing — AoPS Wiki Powered\";\n        break;\n      case 1:\n        text = \"Alcumus, but you don’t get internet points\";\n        break;\n      case 2:\n        text = \"Brilliant, but you don’t learn anything useful\";\n        break;\n      case 3:\n        text = \"Wikiwand, but you don’t get ads everywhere\";\n        break;\n      case 4:\n        text = \"A web browser, but you can only use AoPS\";\n        break;\n      case 5:\n        text = \"A side project, but why didn’t I just use React.js\";\n        break;\n      case 6:\n        text =\n          \"The AoPS Wiki, but you waste time trying to find the other easter eggs\";\n        break;\n    }\n    $(\".subtitle\").html(text);\n  });*/\n})();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}